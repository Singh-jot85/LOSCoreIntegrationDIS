(
("C") as $accrualMethodThisNote |
("SBA EXPRESS - 50%") as $accountDescription |
("SBL") as $officer2 |
("LC*") as $officer3 |
("3") as $class |
(6500) as $fasbCost |
("1763") as $callRPTStmtOfCond |
("1") as $blockAdvanceOnDelinquentOverride |
("1") as $creditBureauDoNotReport |
("0") as $creditBureauAssociationCode |
(100) as $liabilityPercentage |
(0) as $mailCode |
("+") as $marginSign |
("IN") as $regulatoryStateCode |
("A") as $autoTransferSetup |
("08") as $roundingFactor |
("2") as $expirationDateCode7 |
("1") as $reportCodeFlag |
("G") as $consumerRelationshipCode |
(100.00) as $liabilityPercentage |
("0") as $mailCode |
("32") as $iglCode |
("01") as $paymentFrequency |
("1") as $paymentRecalcCode |
("S") as $smPurchaseCode |
("5") as $additiveRateCode |
(5.00) as $maturityPastDueRate |
("50000") as $noteNumber |
("M001") as $rateReviewInterval |
("W") as $reportingStatusCode |
("90") as $lateChargeCode |
("G") as $rateControlCode |
({
    "borrower":"S",
    "guarantor":"G",
    "primary":"P",
    "single":"*"
}) as $relationship |
({
    "SSN" : "S",
    "EIN" : "E"
}) as $tinCode |
({
    "vehicles": "7",
    "furniture_fixtures_equipment": "DD",
    "machinery_and_equipment": "DD",
    "land": "AA",
    "residential_real_estate": "J",
    "commercial_real_estate": "H",
    "life_insurance": "4",
    "cash_and_equivalents": "3",
    "assignment_of_leases": "L",
    "other": "Z",
    "inventory_accounts_receivable": "Z",
    "collateral1Code": "5",
    "collateral2Code": "U",
    "collateral3Code": "E",
    "collateral4Code": "X"
}) as $collateralCode |
({
    "01":31,
    "02":28,
    "03":31,
    "04":30,
    "05":31,
    "06":30,
    "07":31,
    "08":31,
    "09":30,
    "10":31,
    "11":30,
    "12":31,
    "13":29
}) as $totaldays |
({
    "0":"3",
    "1":"2",
    "2":"1"
}) as $dateDueOffset |
({
    "Daniel Salmon":"202",
    "Kelly Mace Miller":"204",
    "Brian D Miller":"205",
    "Joe Powers":"206",
    "Daniel J Salmon":"210",
    "Brian D Miller":"211",
    "Kelly K Miller":"213",
    "DO NOT USE-WORKOUT":"250",
    "Darrell L Jaggers":"300",
    "DO NOT USE-UNCOLLECTABLE":"800",
    "Aracely Ledezma":"A_L",
    "Amy Varga":"AKV",
    "Amy Kezy":"ALK",
    "Andrea Moore":"AM",
    "Andrew M Steffel":"AMS",
    "Art Russell":"AR",
    "Andrea Watson":"AW",
    "Brad A Duncan":"BAD",
    "Benjamin C Jefferis":"BCJ",
    "Brian Ternet":"BCT",
    "Brian Miller":"BDM",
    "Bryan G Olund":"BGO",
    "Barb Jerzyk":"BJ",
    "Deposit Operations":"BKG",
    "Branch Loan":"BL",
    "Brittany Breen":"BNB",
    "Chris Campbell":"CDC",
    "Chris Cossell":"CEC",
    "Clay G Koehler":"CGK",
    "Christine Milton":"CIM",
    "Christine Tanjic":"CIT",
    "Cara l Jones":"CLJ",
    "Cindy Orzechowicz":"CO",
    "Doug A Wood":"DAG",
    "Dan Beechy":"DB",
    "David Bowers":"DCB",
    "Dan C Hanson":"DCH",
    "Dan Peter":"DGP",
    "David Giedemann":"DJG",
    "Dan Salmon":"DJS",
    "David Schnepp":"DLS",
    "Derek M Phillips":"DMP",
    "Dana Snyder":"DNS",
    "Dave R Miller":"DRM",
    "David Taylor":"DT",
    "Ed Schiesser":"EAS",
    "Erik Dombrowski":"ED",
    "Greg Gottschalk":"GDG",
    "Greg Widelski":"GFW",
    "Greg Gordon":"GG",
    "Gina M Storm":"GMS",
    "Gabe W Cripe":"GWC",
    "Jeff A Marsee":"JAM",
    "Jonathan A. Walker":"JAW",
    "Juli Beilicek":"JB",
    "Jonathan Hildebrandt":"JBH",
    "J Blake Sanderson":"JBS",
    "John Misiora":"JCM",
    "Joshua D Stuckey":"JDS",
    "John D Wingfield":"JDW",
    "Jeff F Olds":"JFO",
    "John Rybicki":"JJR",
    "Jason L Taege":"JLT",
    "Jennifer Willis":"JLW",
    "Jean Hershberger":"JMH",
    "Julie N Birmingham":"JNB",
    "Jamie Orcutt":"JO",
    "Joe Powers":"JP",
    "Jesse Dame":"JVD",
    "Jami Weinrich":"JW",
    "Kaylin A Korbelik":"KAK",
    "Kelly Miller":"KKM",
    "Kathy Sears":"KLS",
    "Kevin Cahill":"KMC",
    "Katie M Westlund":"KMW",
    "Kevin S Broadstreet":"KSB",
    "Katie Westlund Ponton":"KWP",
    "Lydia Bowen":"L_B",
    "Leonardo A Amat":"LAA",
    "Lisa Pensinger":"LMP",
    "Lydia Post":"LP",
    "Lupita Pacheco Lopez":"LPL",
    "Mary Dowd":"MCD",
    "Michael Schrage":"MES",
    "Michael Hardtke":"MH1",
    "Mende Jofceski":"MJ",
    "Mary Jo Kennelly":"MJK",
    "Mary Panas":"MKP",
    "Mark Baird":"MLB",
    "Mark Stevenson":"MSS",
    "Meredith Thompson":"MT",
    "Matt Stoops":"MVS",
    "Nick Matthews":"NRM",
    "Olivia McGuire":"OAM",
    "Paul Thiel":"PBT",
    "Patrick Morrisey":"PCM",
    "Paycheck Protection Program":"PPP",
    "Patrick W Collins":"PWC",
    "QuickLine":"QL",
    "Ryan Hoffman":"RJH",
    "Rachael Schroder":"RS",
    "Rob Slusser":"RS2",
    "Shelly Carlson":"S_C",
    "Scott A Norman":"SAN",
    "Stephanie Schrage":"SAS",
    "Sharyn Chesna":"SC",
    "Steve Watts":"SCW",
    "Sue English":"SE",
    "Sharon Harrison":"SH",
    "Sabrina L Kiser":"SLK",
    "Sheila Sieradzki":"SRS",
    "Stephanie Snoeberger":"SSS",
    "Terri Mitchell":"TCM",
    "Tom Neuffer":"TDN",
    "Troy Kafka":"TEK",
    "Tim Turner":"TJT",
    "Tom Wilk":"TJW",
    "Tammy L Johnson":"TLJ",
    "Timothy L Nelson":"TLN",
    "Terri Mitchell":"TM",
    "Terry M Ploetz":"TMP",
    "Timothy M Rudge":"TMR",
    "Tim Spoelman":"TMS",
    "Tom Konrad":"TRK",
    "Tim Woloszyn":"TW1",
    "Tim Warner":"TWW",
    "Vicki Hoffman":"VH",
    "William M Winterhaler":"WMW",
    "Yolanda Estrada":"YE",
    "Jessica A Schneider":"ZJS",
    "Jerry Tomasic":"ZJT",
    "Zoran Koricanac":"ZK",
    "Abbey Seberger":"ABY"
}) as $officerBorrower |

{
    borrowerData: 
        {
            accountNumber: ((if .loan_number then (.loan_number | tonumber) else null end) // null),
            address1: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == "permanent") | (.address_line_1 + " " +.address_line_2 ) | ascii_upcase) // null),
            reportingStatusCode: $reportingStatusCode,
            tinCode: ((.loan_relations[] | select(.is_primary_borrower == true) | $tinCode[.tin_type]) // null),
            tinNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | .tin) // null),
            address2: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == "permanent") | (if.zip_code_plus4 != null then ((.city + " " + .state + " " + .zip_code + "-" + .zip_code_plus4) | ascii_upcase) else ((.city + " " + .state + " " + .zip_code) | ascii_upcase) end)) // null),
            address3: null,
            country: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == "permanent") | .country | ascii_upcase) // null),
            name2TIN: ((.loan_relations[] | select(.borrower_position == 2) | .tin) // null),
            name2TINCode: ((.loan_relations[] | select(.borrower_position == 2) | $tinCode[.tin_type]) // null),
            name3TIN: ((.loan_relations[] | select(.borrower_position == 3) | .tin) // null),
            name3TINCode: ((.loan_relations[] | select(.borrower_position == 3) | $tinCode[.tin_type]) // null),
            phoneNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .work_phone != null then .work_phone|tostring elif .cell_phone != null then .cell_phone|tostring else .home_phone|tostring end)) // null),
            primaryChecking: ((if .loan_disbursement_details then (.loan_disbursement_details.payee_account | tonumber) else null end) // null),
            financialStatementCodes: null,
            financialStatementDate: null,
            financialStatementFrequency: null,
            netWorth: null,
            totalLiability: null,
            lineofCredit: null,
            creditLineExpirationDate: null,
            creditLineClassCode: null,
            officerBorrower: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),
            affiliationCode: null,
            affiliationDesc: null,
            creditApprovedDate: ((.loan_decisioned_at) // null),
            dateFirstCredit: null,
            reportingStatusCode2: ((.loan_relations[] | select(.borrower_position == 2) | "W") // null),
            reportingStatusCode3: ((.loan_relations[] | select(.borrower_position == 3) | "W") // null),
            businessPhone: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == "entity" then .work_phone|tostring else null end)) // null),
            annualSales: ((.loan_relations[] | select(.is_primary_borrower == true) | if .details.annual_business_revenue > 999999 then (.details.annual_business_revenue/10| tostring[:6] | tonumber) else .details.annual_business_revenue end) // null),
            birthDate: ((.loan_relations[] | select(.is_primary_borrower == true) | .dob) // null),
            birthDate2: ((.loan_relations[] | select(.borrower_position == 2) | .dob) // null),
            birthDate3: ((.loan_relations[] | select(.borrower_position == 3) | .dob) // null),
            borrowerExpirationDate: null,
            borrowerExpirationCode: null,
            borrowerExpirationDate2: null,
            borrowerExpirationCode2: null,
            borrowerExpirationDate3: null,
            borrowerExpirationCode3: null,
            marketSegment: null,
            alternateAddress1: null,
            alternateAddress2: null,
            alternateAddress3: null,
            fcraOptOutCode: null,
            privacyCode: null,
            relatedBorrowerCode: null,
            relatedBorrowerCode2: null,
            relatedBorrowerCode3: null,
            relatedBorrowerCode4: null,
            relatedBorrowerCode5: null,
            branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),
            borrMasterLine: null,
            borrSnapshotStatement: null,
            emailNotice: null,
            creditBurAddrInd: null,
            borrNoticeCode: null,
            affiliationCode2: null,
            altAddressBeginDate: null,
            altAddressEndDate: null,
            borrCurRiskCode: null,
            name1First: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == "individual" or .tin_type == "SSN") and .first_name != null) then (.first_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else (.business_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") end)) // null),
            name1Middle: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == "individual" or .tin_type == "SSN") and .middle_name != null) then (.middle_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
            name1Last: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == "individual" or .tin_type == "SSN") and .last_name != null) then (.last_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
            name1Prefix: null,
            name1Suffix: ((.loan_relations[] | select(.is_primary_borrower == true) | .suffix) // null),
            name2First: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == "individual" or .tin_type == "SSN") and .first_name != null) then (.first_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else (.business_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") end)) // null),
            name2Middle: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == "individual" or .tin_type == "SSN") and .middle_name != null) then (.middle_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
            name2Last: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == "individual" or .tin_type == "SSN") and .last_name != null) then (.last_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
            name2Prefix: null,
            name2Suffix: ((.loan_relations[] | select(.borrower_position == 2) | .suffix) // null),
            name3First: ((.loan_relations[] | select(.borrower_position == 3) | (if ((.party_type == "individual" or .tin_type == "SSN") and .first_name != null) then (.first_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else (.business_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") end)) // null),
            name3Middle: ((.loan_relations[] | select(.borrower_position == 3) |(if ((.party_type == "individual" or .tin_type == "SSN") and .middle_name != null) then (.middle_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
            name3Last: ((.loan_relations[] | select(.borrower_position == 3) | (if ((.party_type == "individual" or .tin_type == "SSN") and .last_name != null) then (.last_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
            name3Prefix: null,
            name3Suffix: ((.loan_relations[] | select(.borrower_position == 3) | .suffix) // null),
            emailAddress: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == "entity" then (if .children| length>0 then (.children[] | select(.relation_type == "representative") | (if .email != null then .email | ascii_upcase else null end)) else null end) else (if .email != null then .email | ascii_upcase else null end) end) // null ) // null)
        },
    noteData: 
        {
            accountNumber: ((if .loan_number then (.loan_number | tostring) else null end) // null),
            noteNumber: $noteNumber,
            reportCodeFlag: $reportCodeFlag,
            iglCode: $iglCode,
            lineofBusiness: null,
            interestType: null,
            noteDate: ((if (now | strftime("%Y-%m-%d")) < (.closing_date) then (now | strftime("%Y-%m-%d")) else .closing_date end) // null),
            noteAmount: ((if .product.product_code == "SB_LOC" or .product.product_code == "EL_LOC" then 0 else .approved_amount end) // null),
            interestRate: ((.loan_approval.approved_rate) // null),
            accrualMethodThisNote: $accrualMethodThisNote,
            noteType: ((if .product.product_type.product_type_code == "TL" then "3" elif .product.product_type.product_type_code == "LOC" then "4" else null end) // null),
            paymentFrequency: $paymentFrequency,
            dateFirstDue: ((.payment_start_date) // null),
            dateDueOffset: ((if .closing_date then (.closing_date | (if (((split("-")[0] | tonumber)%4) == 0) then (if split("-")[1] == "02" then (if ($totaldays["13"] - (split("-")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays["13"] - (split("-")[2]|tonumber))|tostring]) else "0"end) else (if ($totaldays[split("-")[1]] - (split("-")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split("-")[1]] - (split("-")[2]|tonumber))|tostring]) else "0"end) end) else (if ($totaldays[split("-")[1]] - (split("-")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split("-")[1]] - (split("-")[2]|tonumber))|tostring]) else "0"end) end)) else null end) // null),
            terms: ((if .product.product_code == "SB_LOC" then (if (.term_in_days != null and .term_in_days < 100) then ("00"+(.term_in_days | tostring)) elif .term_in_days > 99 and .term_in_days < 1000 then ("0"+(.term_in_days | tostring)) else .term_in_days end) elif .term_in_months then (if (.term_in_months != null and .term_in_months < 100) then ("M0"+(.term_in_months | tostring)) elif .term_in_months > 99 then ("M"+(.term_in_months | tostring)) else null end) else null end) // null),
            maturityDate: ((.maturity_date) // null),
            principalPaymentMonths: null,
            interestPaymentMonths: null,
            interestBeginDate: ((.closing_date) // null),
            naicsCode: ((.loan_relations[] | select(.is_primary_borrower == true) | .naics_code | tostring) // null),
            naicsCode2: null,
            officer: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),
            officer2: $officer2,
            officer3: $officer3,
            branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),
            controlCat: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then "M" else "C" end) // null),
            collateral1Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets" or .collateral_type_verbose == "all_assets")) then $collateralCode["collateral1Code"] else ((if .collaterals | length > 0 then (.collaterals[0] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),
            collateral2Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets" or .collateral_type_verbose == "all_assets")) then $collateralCode["collateral2Code"] else ((if .collaterals | length > 1 then (.collaterals[1] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),
            collateral3Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets" or .collateral_type_verbose == "all_assets")) then $collateralCode["collateral3Code"] else ((if .collaterals | length > 2 then (.collaterals[2] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),
            collateral4Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets" or .collateral_type_verbose == "all_assets")) then $collateralCode["collateral4Code"] else ((if .collaterals | length > 3 then (.collaterals[3] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),
            collateral5Code: ((.loan_relations[] | select(.is_primary_borrower == true) | ((if .collaterals | length > 4 then (.collaterals[4] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),
            collateral6Code: ((.loan_relations[] | select(.is_primary_borrower == true) | ((if .collaterals | length > 5 then (.collaterals[5] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),
            collateral7Code: ((.loan_relations[] | select(.is_primary_borrower == true) | ((if .collaterals | length > 6 then (.collaterals[6] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),
            collateral8Code: ((.loan_relations[] | select(.is_primary_borrower == true) | ((if .collaterals | length > 7 then (.collaterals[7] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),
            collateral9Code: ((.loan_relations[] | select(.is_primary_borrower == true) | ((if .collaterals | length > 8 then (.collaterals[8] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),
            noticeCode: null,
            class: $class,
            rateControlCode: $rateControlCode,
            rateReviewDate: ((.rateReviewDate) // null),
            rateReviewInterval: $rateReviewInterval,
            marginAboveBelowBase: ((.differential_rate) // null),
            marginSign: $marginSign,
            lateChargeCode: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then $lateChargeCode else null end) // null),
            propertyDescription: null,
            creditScore1: ((.loan_interfaces[] | select(.interface_type == "fico" and .is_latest == true) | .details.fico_data.FI_LiquidCredit.business_info.decisionData.scoringList.scoring[] | select(.type == "SBSS70") | .totalScore | tostring) // null),
            creditScore2: null,
            ddasavChargeNumber: ((.loan_disbursement_details.payee_account) // null),
            transferIdentification: ((if .product.product_type.product_type_code == "TL" then "D" elif .product.product_type.product_type_code == "LOC" then "1" else null end) // null),
            escrowPayment: null,
            minimumChargeAmount: null,
            partSpecialCode: null,
            participatingBankAlphaDesc: null,
            participationTotalcode: null,
            rebate1Amount: null,
            rebate1CalculateCode: null,
            rebate2Amount: null,
            rebate2CalculateCode: null,
            dealerReserveAmount: null,
            dealerReserveCalculateCode: null,
            rebate3Amount: null,
            rebate3CalculateCode: null,
            rebate4Amount: null,
            rebate4CalculateCode: null,
            rebate5Amount: null,
            rebate5CalculateCode: null,
            rebate6Amount: null,
            rebate6CalculateCode: null,
            rebate7Amt: null,
            rebate7CalcCode: null,
            rebate8Amt: null,
            rebate8CalcCode: null,
            numOfCouponsInFirstBook: null,
            numInstallments: ((.term_in_months | tostring) // null),
            typeCode: null,
            dealerCode: null,
            securityCode: null,
            recourseCode: null,
            miscCode: null,
            miscCode2: null,
            excludeFromBorrML: null,
            ltvSupervisoryException: null,
            ten98Points: null,
            billingStatementOption: null,
            postMaturityRateDaysOverride: null,
            pastDueDaysOverride: null,
            backdateOverride: null,
            regionCode: null,
            sbaArcLoan: null,
            sbaArcLoanDate: null,
            hudNoticeOverride: null,
            autoPayAllocMethodOverride: null,
            autoPayAllocSeqOverride: null,
            loanPromotionCode: null,
            loanPurposeCode: null,
            currentRiskCode: ((.risk_rating) // null),
            riskCode1: null,
            riskGrade1: null,
            riskCode2: null,
            riskGrade2: null,
            borrowerNum1: null,
            borrowerCode1: null,
            borrowerNum2: null,
            borrowerCode2: null,
            borrowerNum3: null,
            borrowerCode3: null,
            numberOfAddlBorrowers: null,
            regularPayment: ((.loan_interfaces[] | select(.interface_type == "sherman" and .is_latest == true) | .details | (if .outEQUAL_PMT then (.outEQUAL_PMT | .AmTable | .AmLine[] | select(.Idx == "1") |.Pmt | tonumber) elif .outLOAN_BUILDER then (.outLOAN_BUILDER | .AmTable | .AmLine[] | select(.Idx == "1") |.Pmt | tonumber) else null end )) // null),
            irregularPaymentAmount: null,
            appraisedValue: null,
            fasbFee: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then (.fees[] | (select(.fee_setup.fee.fee_code == "express_loan_packaging_fee") | .approved_fee_amount)) else (.fees[] | (select(.fee_setup.fee.fee_code == "documentation_prep_fee") | .approved_fee_amount)) end ) // null),
            fasbCost: $fasbCost,
            fasbYieldCode: null,
            crossfootAmount: null,
            committedLiability: ((if .product.product_type.product_type_code == "LOC" then .approved_amount else null end) // null),
            troubleCode: null,
            rateReviewDaysOffset: ((if .closing_date then (.closing_date | (if (((split("-")[0] | tonumber)%4) == 0) then (if split("-")[1] == "02" then (if ($totaldays["13"] - (split("-")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays["13"] - (split("-")[2]|tonumber))|tostring]) else "0"end) else (if ($totaldays[split("-")[1]] - (split("-")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split("-")[1]] - (split("-")[2]|tonumber))|tostring]) else "0"end) end) else (if ($totaldays[split("-")[1]] - (split("-")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split("-")[1]] - (split("-")[2]|tonumber))|tostring]) else "0"end) end)) else null end) // null),
            billingStatementCode: null,
            billingStatementDate: null,
            drawRateSourceCode: null,
            drawPostingOrder: null,
            tierControlCode: null,
            bsaRiskCode: null,
            msaCode: null,
            callRPTStmtOfCond: $callRPTStmtOfCond,
            craCountyCode: null,
            craStateCode: null,
            craAnnualSalesAmt: null,
            regulatoryStateCode: $regulatoryStateCode,
            emailNoticeCode: null,
            letterofCreditCode: null,
            letterOfCreditType: null,
            autoTransferSetup: $autoTransferSetup,
            autoTransferAmount: null,
            usdaRuralHousingInd: null,
            dateOfLastAppraisal: null,
            rebateControlDays: null,
            debtToIncomeRatio: null,
            debtToServiceCoverage: null,
            pmiCoveragePercentage: null,
            achOrigination: null,
            templateID: null,
            hoepaCode: null,
            rwaCategory: null,
            rwaPercent: null,
            rwaSecured: null,
            ibTransferAmount: null,
            ibPrincipal: null,
            ibEscrow: null,
            ibInterest: null,
            ibLateCharge: null,
            userDefined6: null,
            userDefined7: null,
            userDefined8: null,
            userDefined9: "N/A - NOT ADC",
            userDefined10: null,
            fmacsbaGuaranteePercent: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then ((if .sba_express_details and .sba_express_details != {} then .sba_express_details.sba_guaranty_percent | tonumber else null end) // null) else null end) // null),
            fmacsbaServiceFeePercent: ((if ((.product.product_code == "EL_TL" or .product.product_code == "EL_LOC") and .approved_amount) then (if .approved_amount < 500000 then 0 else null end) else null end) // null),
            fmacmpFeePercent: null,
            fmacSeriesNumber: null,
            fmacid: null,
            taxService: null,
            fasbTermOverride: null,
            fasbBeginDate: null,
            blockAdvanceOnDelinquentOverride: $blockAdvanceOnDelinquentOverride,
            irregularPayPercentage: null,
            allowOverlinePercent: null,
            autoTransferSplit1Day: null,
            autoTransferSplit2Day: null,
            creditBureauGovernmentTypeCode: null,
            dateOfLastDebtServiceCoverage: null,
            doNotDeleteCode: ((if .product.product_type.product_type_code == "LOC" then "1" else null end) // null),
            endOfDrawDate: null,
            eoyReportCode: null,
            fhlbExceptionCode: null,
            floodZone: null,
            floodZoneMap: null,
            floodZoneMapDate: null,
            pmiPrepaidAmount: null,
            rvcInsuranceCode: null,
            smPurchaserProgramCode: null,
            type2BillingControl: null,
            type2MinimumPrincipalToBill: null,
            companionNoteIndicator: null,
            companionBorrowerNumber: null,
            companionNoteNumber: null,
            baseRateFactor: null,
            numDaysBeforeNewRateEff: null,
            paymentRecalcCode: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then $paymentRecalcCode else null end) // null),
            roundingFactor: $roundingFactor,
            minimumChangeFactor: null,
            smPurchaseCode: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then $smPurchaseCode else null end) // null),
            smPurchaseProgram: null,
            smPoolNumber: ((.sba_number) // null),
            smLoanIDNumber: null,
            fundingDate: null,
            expirationDate1: null,
            expirationDateCode1: null,
            expirationDate2: null,
            expirationDateCode2: null,
            expirationDate3: null,
            expirationDateCode3: null,
            expirationDate4: null,
            expirationDateCode4: null,
            expirationDate5: null,
            expirationDateCode5: null,
            expirationDate6: null,
            expirationDateCode6: null,
            expirationDate7: ((now | strftime("%Y-%m-%d"))// null),
            expirationDateCode7: $expirationDateCode7,
            expirationDate8: null,
            expirationDateCode8: null,
            rvcPlanCode: null,
            rvcNextBillingDate: null,
            sicCode: ((if (.details and .details.boarding_details and .details.boarding_details.sicCode) then .details.boarding_details.sicCode else null end) // null),
            ddaCombinedStmtAcctNo: null,
            ddaCombinedStmtID: null,
            couponPullFlag: null,
            dateFirstCoupon: null,
            undisbursedCreditLineCode: ((if .product.product_type.product_type_code == "LOC" then "R" else null end) // null),
            censusTractCode: null,
            timesRenewed: null,
            additiveRateCode: ((if .product.product_code != "EL_TL" and .product.product_code != "EL_LOC" then $additiveRateCode else null end) // null),
            internetProductCode: null,
            userDefinedField1: null,
            userDefinedField2: null,
            userDefinedField3: null,
            userDefinedField4: null,
            userDefinedField5: ((.loan_relations[] | select(.is_primary_borrower == true) | ((if .collaterals | length > 0 then (.collaterals[] | (select(.collateral_type_verbose == "Motor Vehicle") | .rolling_stock_details | .model + " " + (.year % 100 | tostring) + " " + .make + " " + .vin) // null) else null end))) // null),
            letterofCreditRolloverDays: null,
            balloonLoanIndicator: null,
            balloonLoanTerm: null,
            balloonLoanDueDate: null,
            rateFloor: ((.product.min_rate) // null),
            rateCeiling: ((.product.max_rate) // null),
            originalBaseRate: null,
            originalInterestRate: null,
            periodicRateIncreaseLimit: null,
            periodicRateDecreaseLimit: null,
            smPassThroughRate: null,
            maturityPastDueRate: ((if .product.product_code != "EL_TL" and .product.product_code != "EL_LOC" then $maturityPastDueRate else null end) // null),
            originalPurchasePrice: null,
            riskWeighting: null,
            enterpriseZoneFactor: null,
            higherPricedLoan: null,
            propertyDescription2: null,
            propertyDescription3: null,
            propertyDescription4: null,
            creditBureauDoNotReport: $creditBureauDoNotReport,
            tfrDaysBeforeDueDate: null,
            tfrDaysAfterDueDate: null,
            numOfCoupons: null,
            accountDescription: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then $accountDescription else (.product.name) end) // null),
            originalRequestedAmount: null,
            repaymentAmount: null,
            hmdaCode: null,
            sbaTypeCode: null,
            smParticipationPercentage: null,
            auxiliaryEscrowPayment: null,
            mers: null,
            pmiProjTerminationDate: null,
            capitalizePaymentCode: null,
            creditBureauAssociationCode: $creditBureauAssociationCode,
            milarCompanyCode: null,
            milarPrimaryCertificateNumber: null,
            milarContractID: null,
            milarPoolCertificateNumber: null,
            pmiCancelCode: null,
            useCollateralValueMarginRates: null,
            legalEntityCustomerStatus: null,
            originalBaseRateSign: null,
            sbaRecoupFeeFlag: null,
            ten98PropertyAddressIndicator: null,
            ten98PropertyAddressDescriptionBox9Line1: null,
            ten98PropertyAddressDescriptionBox9Line2: null,
            ten98NumberOfProperties: null,
            advanceFeeAmountFlag: null,
            fhavaCaseNumber: null,
            unconditionallyCancelableCommitment: null,
            baseRateFactorControl: null,
            accountTitle: null,
            universalLoanIdentifier: null,
            propertyAddress1: null,
            propertyAddress2: null,
            propertyAddress3: null,
            ten98PointsPaidCode: null,
            collateralInfo: 
                {
                    description1: null,
                    description2: null,
                    description3: null,
                    description4: null,
                    description5: null,
                    description6: null,
                    description7: null,
                    description8: null,
                    description9: null,
                    additionalDetails: null
                }
        },
    customerRelationships: [if any(.loan_relations[]; select(.borrower_position == 2)) == false then (.loan_relations[] | 
        if(.is_primary_borrower == true) then 
            {
                relationship: (($relationship["single"]) // null),
                customerGuid: ((.external_customer_id) // null)
            }
            elif (.relation_type == "guarantor") then 
            {
                relationship: (($relationship[.relation_type
                ]) // null),
                customerGuid: ((.external_customer_id) // null)
            }
            else empty end)
        elif (any(.loan_relations[]; select(.borrower_position == 2)) == true) then (.loan_relations[] | if(.relation_type == "borrower") then 
            {
                relationship: ((if .is_primary_borrower == true then $relationship["primary"] else $relationship[.relation_type] end) // null),
                customerGuid: ((.external_customer_id) // null)
            }
        elif (.relation_type == "guarantor") then 
            {
                relationship: (($relationship[.relation_type]) // null),
                customerGuid: ((.external_customer_id) // null)
            }
        else empty end)
        else .loan_relations[] | (if (.relation_type == "guarantor") then 
            {
                relationship: (($relationship[.relation_type
                ]) // null),
                customerGuid: ((.external_customer_id) // null)
            }
        else empty end)
        end
    ],
    comaker: [.loan_relations[] | (if .relation_type == "guarantor" then 
        {
            address1: ((.relation_addresses[] | select(.address_type == "permanent") | (.address_line_1 + " " +.address_line_2 ) | ascii_upcase) // null),
            borrowerNumber: ((if .loan_number then (.loan_number | tostring) else null end) // null),
            customerGuid: ((.external_customer_id) // null),
            consumerRelationshipCode: $consumerRelationshipCode,
            noteNumber: $noteNumber,
            tinid: $tinCode[.tin_type],
            tinNumber: ((.tin) // null),
            address2: ((.relation_addresses[] | select(.address_type == "permanent") | ((.city + " " + .state) | ascii_upcase)) // null),
            address3: null,
            affiliationCode: null,
            alternatePhone: null,
            bankruptcyChapter: null,
            bankruptcyFilingDate: null,
            bankruptcyFilingType: null,
            bankruptcyStatus: null,
            businessName: ((if .business_name != null then (.business_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end) // null),
            businessPhone: ((.work_phone|tostring) // null),
            cbAddressIndicator: null,
            cbReportingStatus: null,
            city: ((.relation_addresses[] | select(.address_type == "permanent") | (if .city then (.city | ascii_upcase) else null end ) // null) // null),
            consumerInfoIndicator: null,
            cosignerNumber: null,
            country: null,
            creditScore1: null,
            creditScore2: null,
            designation: null,
            doNotReportCode: null,
            emailAddress: ((if .email != null then .email | ascii_upcase else null end) // null),
            eMailNoticeFlag: null,
            firstName: ((if .first_name != null then (.first_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end) // null),
            homePhone: ((if .home_phone != null then .home_phone | tostring else null end) // null),
            inactiveCode: null,
            lastName: ((if .last_name != null then (.last_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end) // null),
            liabilityAmount: null,
            liabilityPercentage: $liabilityPercentage,
            mailCode: $mailCode,
            middleName: ((if .middle_name != null then (.middle_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end) // null),
            prefix: null,
            printPrefix: null,
            printSuffix: ((.suffix) // null),
            province: null,
            state: ((.relation_addresses[] | select(.address_type == "permanent") | (if .state != null then (.state | ascii_upcase) else null end)// null) // null),
            suffix: ((.suffix) // null),
            zipCode: ((.relation_addresses[] | select(.address_type == "permanent") | .zip_code) // null)
        }
        else empty end)
    ]
}
)