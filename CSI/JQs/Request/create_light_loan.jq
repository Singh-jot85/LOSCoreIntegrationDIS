(
("C") as $accrualMethodThisNote |
("3") as $class |
("1763") as $callRPTStmtOfCond |
("1") as $creditBureauDoNotReport |
("+") as $marginSign |
("08") as $roundingFactor |
("1") as $reportCodeFlag |
("32") as $iglCode |
("01") as $paymentFrequency |
("50000") as $noteNumber |
("M001") as $rateReviewInterval |
("W") as $reportingStatusCode |
("90") as $lateChargeCode |
("G") as $rateControlCode |
({
    "borrower":"S",
    "guarantor":"G",
    "primary":"P",
    "single":"*"
}) as $relationship |
({
    "SSN" : "S",
    "EIN" : "E"
}) as $tinCode |
({
    "Boat - State Titled" : "D",
    "Motor Vehicle" : "7",
    "Trailer - State Titled" : "DD",
    "Outboard Motor of a Boat" : "DD",
    "Equipment" : "DD",
    "collateral1Code" : "5",
    "collateral2Code": "U",
    "collateral3Code": "E",
    "collateral4Code": "X"
}) as $collateralCode |
({
    "Daniel Salmon":"202",
    "Kelly Mace Miller":"204",
    "Brian D Miller":"205",
    "Joe Powers":"206",
    "Daniel J Salmon":"210",
    "Brian D Miller":"211",
    "Kelly K Miller":"213",
    "DO NOT USE-WORKOUT":"250",
    "Darrell L Jaggers":"300",
    "DO NOT USE-UNCOLLECTABLE":"800",
    "Aracely Ledezma":"A_L",
    "Amy Varga":"AKV",
    "Amy Kezy":"ALK",
    "Andrea Moore":"AM",
    "Andrew M Steffel":"AMS",
    "Art Russell":"AR",
    "Andrea Watson":"AW",
    "Brad A Duncan":"BAD",
    "Benjamin C Jefferis":"BCJ",
    "Brian Ternet":"BCT",
    "Brian Miller":"BDM",
    "Bryan G Olund":"BGO",
    "Barb Jerzyk":"BJ",
    "Deposit Operations":"BKG",
    "Branch Loan":"BL",
    "Brittany Breen":"BNB",
    "Chris Campbell":"CDC",
    "Chris Cossell":"CEC",
    "Clay G Koehler":"CGK",
    "Christine Milton":"CIM",
    "Christine Tanjic":"CIT",
    "Cara l Jones":"CLJ",
    "Cindy Orzechowicz":"CO",
    "Doug A Wood":"DAG",
    "Dan Beechy":"DB",
    "David Bowers":"DCB",
    "Dan C Hanson":"DCH",
    "Dan Peter":"DGP",
    "David Giedemann":"DJG",
    "Dan Salmon":"DJS",
    "David Schnepp":"DLS",
    "Derek M Phillips":"DMP",
    "Dana Snyder":"DNS",
    "Dave R Miller":"DRM",
    "David Taylor":"DT",
    "Ed Schiesser":"EAS",
    "Erik Dombrowski":"ED",
    "Greg Gottschalk":"GDG",
    "Greg Widelski":"GFW",
    "Greg Gordon":"GG",
    "Gina M Storm":"GMS",
    "Gabe W Cripe":"GWC",
    "Jeff A Marsee":"JAM",
    "Jonathan A. Walker":"JAW",
    "Juli Beilicek":"JB",
    "Jonathan Hildebrandt":"JBH",
    "J Blake Sanderson":"JBS",
    "John Misiora":"JCM",
    "Joshua D Stuckey":"JDS",
    "John D Wingfield":"JDW",
    "Jeff F Olds":"JFO",
    "John Rybicki":"JJR",
    "Jason L Taege":"JLT",
    "Jennifer Willis":"JLW",
    "Jean Hershberger":"JMH",
    "Julie N Birmingham":"JNB",
    "Jamie Orcutt":"JO",
    "Joe Powers":"JP",
    "Jesse Dame":"JVD",
    "Jami Weinrich":"JW",
    "Kaylin A Korbelik":"KAK",
    "Kelly Miller":"KKM",
    "Kathy Sears":"KLS",
    "Kevin Cahill":"KMC",
    "Katie M Westlund":"KMW",
    "Kevin S Broadstreet":"KSB",
    "Katie Westlund Ponton":"KWP",
    "Lydia Bowen":"L_B",
    "Leonardo A Amat":"LAA",
    "Lisa Pensinger":"LMP",
    "Lydia Post":"LP",
    "Lupita Pacheco Lopez":"LPL",
    "Mary Dowd":"MCD",
    "Michael Schrage":"MES",
    "Michael Hardtke":"MH1",
    "Mende Jofceski":"MJ",
    "Mary Jo Kennelly":"MJK",
    "Mary Panas":"MKP",
    "Mark Baird":"MLB",
    "Mark Stevenson":"MSS",
    "Meredith Thompson":"MT",
    "Matt Stoops":"MVS",
    "Nick Matthews":"NRM",
    "Olivia McGuire":"OAM",
    "Paul Thiel":"PBT",
    "Patrick Morrisey":"PCM",
    "Paycheck Protection Program":"PPP",
    "Patrick W Collins":"PWC",
    "QuickLine":"QL",
    "Ryan Hoffman":"RJH",
    "Rachael Schroder":"RS",
    "Rob Slusser":"RS2",
    "Shelly Carlson":"S_C",
    "Scott A Norman":"SAN",
    "Stephanie Schrage":"SAS",
    "Sharyn Chesna":"SC",
    "Steve Watts":"SCW",
    "Sue English":"SE",
    "Sharon Harrison":"SH",
    "Sabrina L Kiser":"SLK",
    "Sheila Sieradzki":"SRS",
    "Stephanie Snoeberger":"SSS",
    "Terri Mitchell":"TCM",
    "Tom Neuffer":"TDN",
    "Troy Kafka":"TEK",
    "Tim Turner":"TJT",
    "Tom Wilk":"TJW",
    "Tammy L Johnson":"TLJ",
    "Timothy L Nelson":"TLN",
    "Terri Mitchell":"TM",
    "Terry M Ploetz":"TMP",
    "Timothy M Rudge":"TMR",
    "Tim Spoelman":"TMS",
    "Tom Konrad":"TRK",
    "Tim Woloszyn":"TW1",
    "Tim Warner":"TWW",
    "Vicki Hoffman":"VH",
    "William M Winterhaler":"WMW",
    "Yolanda Estrada":"YE",
    "Jessica A Schneider":"ZJS",
    "Jerry Tomasic":"ZJT",
    "Zoran Koricanac":"ZK",
    "Abbey Seberger":"ABY"
}) as $officerBorrower |
{
    borrowerData: {
        accountNumber: ((if .loan_number != null then (.loan_number | tonumber) else null end) // null),
        address1: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == "permanent") | (.address_line_1 + " " +.address_line_2 ) | ascii_upcase) // null),
        reportingStatusCode: $reportingStatusCode,
        tinCode: ((.loan_relations[] | select(.is_primary_borrower == true) | $tinCode[.tin_type]) // null),
        tinNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | .tin) // null),
        address2: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == "permanent") | (if.zip_code_plus4 != null then (.city + " " + .state + " " + .zip_code + "-" + .zip_code_plus4) | ascii_upcase else (.city + " " + .state + " " + .zip_code) | ascii_upcase end)) // null),
        address3: null,
        country: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == "permanent") | .country | ascii_upcase) // null),
        name2TIN: ((.loan_relations[] | select(.borrower_position == 2) | .tin) // null),
        name2TINCode: ((.loan_relations[] | select(.borrower_position == 2) | $tinCode[.tin_type]) // null),
        phoneNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .work_phone != null then .work_phone|tostring elif .cell_phone != null then .cell_phone|tostring else .home_phone|tostring end)) // null),
        officerBorrower: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),
        reportingStatusCode2: ((.loan_relations[] | select(.borrower_position == 2) | "W") // null),
        businessPhone: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == "entity" then .work_phone|tostring else null end)) // null),
        birthDate: ((.loan_relations[] | select(.is_primary_borrower == true) | .dob) // null),
        birthDate2: ((.loan_relations[] | select(.borrower_position == 2) | .dob) // null),
        branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),
        name1First: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == "individual" or .tin_type == "SSN") and .first_name != null) then (.first_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else (.business_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") end)) // null),
        name1Middle: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == "individual" or .tin_type == "SSN") and .middle_name != null) then (.middle_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
        name1Last: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == "individual" or .tin_type == "SSN") and .last_name != null) then (.last_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
        name2First: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == "individual" or .tin_type == "SSN") and .first_name != null) then (.first_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else (.business_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") end)) // null),
        name2Middle: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == "individual" or .tin_type == "SSN") and .middle_name != null) then (.middle_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
        name2Last: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == "individual" or .tin_type == "SSN") and .last_name != null) then (.last_name | split("")) | map(if test("[[:punct:]]") then if . == "&" then "&" else "" end else . end | ascii_upcase) | join("") else null end)) // null),
        emailAddress: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == "entity" then (if .children| length>0 then (.children[] | select(.relation_type == "representative") | (if .email != null then .email | ascii_upcase else null end)) else null end) else (if .email != null then .email | ascii_upcase else null end) end) ) // null)
    },
    noteData: {
        accountNumber: ((if .loan_number != null then (.loan_number | tostring) else null end) // null),
        noteNumber: $noteNumber,
        reportCodeFlag: $reportCodeFlag,
        iglCode: $iglCode,
        noteDate: ((if (now | strftime("%Y-%m-%d")) < (.closing_date) then (now | strftime("%Y-%m-%d")) else .closing_date end) // null),
        noteAmount: ((if .product.product_code == "SB_LOC" then 0 else .approved_amount end) // null),
        interestRate: ((.loan_approval.approved_rate) // null),
        accrualMethodThisNote: $accrualMethodThisNote,
        noteType: ((if .product.product_type.product_type_code == "TL" then "3" elif .product.product_type.product_type_code == "LOC" then "4" else null end) // null),
        paymentFrequency: $paymentFrequency,
        dateFirstDue: ((.payment_start_date) // null),
        maturityDate: ((.maturity_date) // null),
        officer: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),
        branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),
        controlCat: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then "M" else "C" end) // null),
        collateral1Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets")) then $collateralCode["collateral1Code"] else ((if .collaterals | length > 0 then (.collaterals[0] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),
        collateral2Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets")) then $collateralCode["collateral2Code"] else ((if .collaterals | length > 1 then (.collaterals[1] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),
        collateral3Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets")) then $collateralCode["collateral3Code"] else ((if .collaterals | length > 2 then (.collaterals[2] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),
        collateral4Code: ((.loan_relations[] | select(.is_primary_borrower == true) | if(any(.collaterals[]; .collateral_type_verbose == "All Assets")) then $collateralCode["collateral4Code"] else ((if .collaterals | length > 3 then (.collaterals[3] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),
        class: $class,
        rateControlCode: $rateControlCode,
        rateReviewInterval: $rateReviewInterval,
        marginAboveBelowBase: ((.differential_rate) // null),
        marginSign: $marginSign,
        lateChargeCode: ((if .product.product_code == "EL_TL" or .product.product_code == "EL_LOC" then $lateChargeCode else null end) // null),
        propertyDescription: null,
        creditScore1: ((.loan_interfaces[] | select(.interface_type == "fico" and .is_latest == true) | .details.fico_data.FI_LiquidCredit.business_info.decisionData.scoringList.scoring[] | select(.type == "SBSS70") | .totalScore | tostring) // null),
        creditScore2: null,
        committedLiability: ((if .product.product_type.product_type_code == "LOC" then .approved_amount else null end) // null),
        callRPTStmtOfCond: $callRPTStmtOfCond,
        doNotDeleteCode: ((if .product.product_type.product_type_code == "LOC" then "1" else null end) // null),
        roundingFactor: $roundingFactor,
        undisbursedCreditLineCode: ((if .product.product_type.product_type_code == "LOC" then "R" else null end) // null),
        rateFloor: ((.product.min_rate) // null),
        rateCeiling: ((.product.max_rate) // null),
        propertyDescription2: null,
        propertyDescription3: null,
        propertyDescription4: null,
        creditBureauDoNotReport: $creditBureauDoNotReport
    },
    customerRelationships: [if any(.loan_relations[]; select(.borrower_position == 2)) == false 
        then (.loan_relations[] | if(.is_primary_borrower == true) 
            then {
                relationship: (($relationship["single"]) // null),
                customerGuid: ((.external_customer_id) // null)
            }
            else empty end)
        elif (any(.loan_relations[]; select(.borrower_position == 2)) == true) 
        then (.loan_relations[] | if(.is_primary_borrower == true) 
            then {
                relationship: $relationship["primary"],
                customerGuid: ((.external_customer_id) // null)
            }
            else empty end)
        else empty end
    ]
}
)