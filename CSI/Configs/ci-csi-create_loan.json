{
    "timeout": 60,
    "validation_spec": "{}",
    "request_body_spec": "{\n    borrowerData: \n        {\n            accountNumber: ((if .loan_number then (.loan_number | tonumber) else null end) // null),\n            address1: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == \"permanent\") | (.address_line_1 + \" \" +.address_line_2 ) | ascii_upcase) // null),\n            reportingStatusCode: $reportingStatusCode,\n            tinCode: ((.loan_relations[] | select(.is_primary_borrower == true) | $tinCode[.tin_type]) // null),\n            tinNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | .tin) // null),\n            address2: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == \"permanent\") | (if.zip_code_plus4 != null then ((.city + \" \" + .state + \" \" + .zip_code + \"-\" + .zip_code_plus4) | ascii_upcase) else ((.city + \" \" + .state + \" \" + .zip_code) | ascii_upcase) end)) // null),\n            address3: null,\n            country: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == \"permanent\") | .country | ascii_upcase) // null),\n            name2TIN: ((.loan_relations[] | select(.borrower_position == 2) | .tin) // null),\n            name2TINCode: ((.loan_relations[] | select(.borrower_position == 2) | $tinCode[.tin_type]) // null),\n            name3TIN: ((.loan_relations[] | select(.borrower_position == 3) | .tin) // null),\n            name3TINCode: ((.loan_relations[] | select(.borrower_position == 3) | $tinCode[.tin_type]) // null),\n            phoneNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .work_phone != null then .work_phone|tostring elif .cell_phone != null then .cell_phone|tostring else .home_phone|tostring end)) // null),\n            primaryChecking: ((if .loan_disbursement_details then (.loan_disbursement_details.payee_account | tonumber) else null end) // null),\n            financialStatementCodes: null,\n            financialStatementDate: null,\n            financialStatementFrequency: null,\n            netWorth: null,\n            totalLiability: null,\n            lineofCredit: null,\n            creditLineExpirationDate: null,\n            creditLineClassCode: null,\n            officerBorrower: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),\n            affiliationCode: null,\n            affiliationDesc: null,\n            creditApprovedDate: ((.loan_decisioned_at) // null),\n            dateFirstCredit: null,\n            reportingStatusCode2: ((.loan_relations[] | select(.borrower_position == 2) | \"W\") // null),\n            reportingStatusCode3: ((.loan_relations[] | select(.borrower_position == 3) | \"W\") // null),\n            businessPhone: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == \"entity\" then .work_phone|tostring else null end)) // null),\n            annualSales: ((.loan_relations[] | select(.is_primary_borrower == true) | if .details.annual_business_revenue > 999999 then (.details.annual_business_revenue/10| tostring[:6] | tonumber) else .details.annual_business_revenue end) // null),\n            birthDate: ((.loan_relations[] | select(.is_primary_borrower == true) | .dob) // null),\n            birthDate2: ((.loan_relations[] | select(.borrower_position == 2) | .dob) // null),\n            birthDate3: ((.loan_relations[] | select(.borrower_position == 3) | .dob) // null),\n            borrowerExpirationDate: null,\n            borrowerExpirationCode: null,\n            borrowerExpirationDate2: null,\n            borrowerExpirationCode2: null,\n            borrowerExpirationDate3: null,\n            borrowerExpirationCode3: null,\n            marketSegment: null,\n            alternateAddress1: null,\n            alternateAddress2: null,\n            alternateAddress3: null,\n            fcraOptOutCode: null,\n            privacyCode: null,\n            relatedBorrowerCode: null,\n            relatedBorrowerCode2: null,\n            relatedBorrowerCode3: null,\n            relatedBorrowerCode4: null,\n            relatedBorrowerCode5: null,\n            branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),\n            borrMasterLine: null,\n            borrSnapshotStatement: null,\n            emailNotice: null,\n            creditBurAddrInd: null,\n            borrNoticeCode: null,\n            affiliationCode2: null,\n            altAddressBeginDate: null,\n            altAddressEndDate: null,\n            borrCurRiskCode: null,\n            name1First: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .first_name != null) then (.first_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else (.business_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") end)) // null),\n            name1Middle: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .middle_name != null) then (.middle_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n            name1Last: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .last_name != null) then (.last_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n            name1Prefix: null,\n            name1Suffix: ((.loan_relations[] | select(.is_primary_borrower == true) | .suffix) // null),\n            name2First: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .first_name != null) then (.first_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else (.business_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") end)) // null),\n            name2Middle: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .middle_name != null) then (.middle_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n            name2Last: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .last_name != null) then (.last_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n            name2Prefix: null,\n            name2Suffix: ((.loan_relations[] | select(.borrower_position == 2) | .suffix) // null),\n            name3First: ((.loan_relations[] | select(.borrower_position == 3) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .first_name != null) then (.first_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else (.business_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") end)) // null),\n            name3Middle: ((.loan_relations[] | select(.borrower_position == 3) |(if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .middle_name != null) then (.middle_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n            name3Last: ((.loan_relations[] | select(.borrower_position == 3) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .last_name != null) then (.last_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n            name3Prefix: null,\n            name3Suffix: ((.loan_relations[] | select(.borrower_position == 3) | .suffix) // null),\n            emailAddress: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == \"entity\" then (if .children| length>0 then (.children[] | select(.relation_type == \"representative\") | (if .email != null then .email | ascii_upcase else null end)) else null end) else (if .email != null then .email | ascii_upcase else null end) end) // null ) // null)\n        },\n    noteData: \n        {\n            accountNumber: ((if .loan_number then (.loan_number | tostring) else null end) // null),\n            noteNumber: $noteNumber,\n            reportCodeFlag: $reportCodeFlag,\n            iglCode: $iglCode,\n            lineofBusiness: null,\n            interestType: null,\n            noteDate: ((if (now | strftime(\"%Y-%m-%d\")) < (.closing_date) then (now | strftime(\"%Y-%m-%d\")) else .closing_date end) // null),\n            noteAmount: ((if .product.product_code == \"SB_LOC\" or .product.product_code == \"EL_LOC\" then 0 else .approved_amount end) // null),\n            interestRate: ((.loan_approval.approved_rate) // null),\n            accrualMethodThisNote: $accrualMethodThisNote,\n            noteType: ((if .product.product_type.product_type_code == \"TL\" then \"3\" elif .product.product_type.product_type_code == \"LOC\" then \"4\" else null end) // null),\n            paymentFrequency: $paymentFrequency,\n            dateFirstDue: ((.payment_start_date) // null),\n            dateDueOffset: ((if .closing_date then (.closing_date | (if (((split(\"-\")[0] | tonumber)%4) == 0) then (if split(\"-\")[1] == \"02\" then (if ($totaldays[\"13\"] - (split(\"-\")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[\"13\"] - (split(\"-\")[2]|tonumber))|tostring]) else \"0\"end) else (if ($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber))|tostring]) else \"0\"end) end) else (if ($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber))|tostring]) else \"0\"end) end)) else null end) // null),\n            terms: ( (if .product.product_code == \"SB_LOC\" then (if (.term_in_days != null and .term_in_days < 100) then (\"00\"+(.term_in_days | tostring)) elif .term_in_days > 99 and .term_in_days < 1000 then (\"0\"+(.term_in_days | tostring)) else .term_in_days | tostring end) elif .term_in_months then (if (.term_in_months != null and .term_in_months < 100) then (\"M0\"+(.term_in_months | tostring)) elif .term_in_months > 99 then (\"M\"+(.term_in_months | tostring)) else null end) else null end) // null),\n            maturityDate: ((.maturity_date) // null),\n            principalPaymentMonths: null,\n            interestPaymentMonths: null,\n            interestBeginDate: ((.closing_date) // null),\n            naicsCode: ((.loan_relations[] | select(.is_primary_borrower == true) | .naics_code | tostring) // null),\n            naicsCode2: null,\n            officer: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),\n            officer2: $officer2,\n            officer3: $officer3,\n            branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),\n            controlCat: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then \"M\" else \"C\" end) // null),\n            collateral1Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList[]; .collateral_type_verbose == \"All Assets\" or .collateral_type_verbose == \"all_assets\")) then $collateralCode[\"collateral1Code\"] else ((if $collateralList | length > 0 then ($collateralList[0] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),\n            collateral2Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList[]; .collateral_type_verbose == \"All Assets\" or .collateral_type_verbose == \"all_assets\")) then $collateralCode[\"collateral2Code\"] else ((if $collateralList | length > 1 then ($collateralList[1] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),\n            collateral3Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList[]; .collateral_type_verbose == \"All Assets\" or .collateral_type_verbose == \"all_assets\")) then $collateralCode[\"collateral3Code\"] else ((if $collateralList | length > 2 then ($collateralList[2] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),\n            collateral4Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList[]; .collateral_type_verbose == \"All Assets\" or .collateral_type_verbose == \"all_assets\")) then $collateralCode[\"collateral4Code\"] else ((if $collateralList | length > 3 then ($collateralList[3] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end)) end ) // null),\n            collateral5Code: (( [.collaterals[] ] as $collateralList | ((if $collateralList | length > 4 then ($collateralList[4] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),\n            collateral6Code: (( [.collaterals[] ] as $collateralList | ((if $collateralList | length > 5 then ($collateralList[5] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),\n            collateral7Code: (( [.collaterals[] ] as $collateralList | ((if $collateralList | length > 6 then ($collateralList[6] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),\n            collateral8Code: (( [.collaterals[] ] as $collateralList | ((if $collateralList | length > 7 then ($collateralList[7] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),\n            collateral9Code: (( [.collaterals[] ] as $collateralList | ((if $collateralList | length > 8 then ($collateralList[8] | (if .category then $collateralCode[.category] else $collateralCode[.collateral_type_verbose] end)) else null end))) // null),\n            noticeCode: null,\n            class: $class,\n            rateControlCode: $rateControlCode,\n            rateReviewDate: ((.rateReviewDate) // null),\n            rateReviewInterval: $rateReviewInterval,\n            marginAboveBelowBase: ((.differential_rate) // null),\n            marginSign: $marginSign,\n            lateChargeCode: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then $lateChargeCode else null end) // null),\n            propertyDescription: null,\n            creditScore1: ((.loan_interfaces[] | select(.interface_type == \"fico\" and .is_latest == true) | .details.fico_data.FI_LiquidCredit.business_info.decisionData.scoringList.scoring[] | select(.type == \"SBSS70\") | .totalScore | tostring) // null),\n            creditScore2: null,\n            ddasavChargeNumber: ((.loan_disbursement_details.payee_account) // null),\n            transferIdentification: ((if .product.product_type.product_type_code == \"TL\" then \"D\" elif .product.product_type.product_type_code == \"LOC\" then \"1\" else null end) // null),\n            escrowPayment: null,\n            minimumChargeAmount: null,\n            partSpecialCode: null,\n            participatingBankAlphaDesc: null,\n            participationTotalcode: null,\n            rebate1Amount: null,\n            rebate1CalculateCode: null,\n            rebate2Amount: null,\n            rebate2CalculateCode: null,\n            dealerReserveAmount: null,\n            dealerReserveCalculateCode: null,\n            rebate3Amount: null,\n            rebate3CalculateCode: null,\n            rebate4Amount: null,\n            rebate4CalculateCode: null,\n            rebate5Amount: null,\n            rebate5CalculateCode: null,\n            rebate6Amount: null,\n            rebate6CalculateCode: null,\n            rebate7Amt: null,\n            rebate7CalcCode: null,\n            rebate8Amt: null,\n            rebate8CalcCode: null,\n            numOfCouponsInFirstBook: null,\n            numInstallments: ((.term_in_months | tostring) // null),\n            typeCode: null,\n            dealerCode: null,\n            securityCode: null,\n            recourseCode: null,\n            miscCode: null,\n            miscCode2: null,\n            excludeFromBorrML: null,\n            ltvSupervisoryException: null,\n            ten98Points: null,\n            billingStatementOption: null,\n            postMaturityRateDaysOverride: null,\n            pastDueDaysOverride: null,\n            backdateOverride: null,\n            regionCode: null,\n            sbaArcLoan: null,\n            sbaArcLoanDate: null,\n            hudNoticeOverride: null,\n            autoPayAllocMethodOverride: null,\n            autoPayAllocSeqOverride: null,\n            loanPromotionCode: null,\n            loanPurposeCode: null,\n            currentRiskCode: ((.risk_rating) // null),\n            riskCode1: null,\n            riskGrade1: null,\n            riskCode2: null,\n            riskGrade2: null,\n            borrowerNum1: null,\n            borrowerCode1: null,\n            borrowerNum2: null,\n            borrowerCode2: null,\n            borrowerNum3: null,\n            borrowerCode3: null,\n            numberOfAddlBorrowers: null,\n            regularPayment: ((.loan_interfaces[] | select(.interface_type == \"sherman\" and .is_latest == true) | .details | (if .outEQUAL_PMT then (.outEQUAL_PMT | .AmTable | .AmLine[] | select(.Idx == \"1\") |.Pmt | tonumber) elif .outLOAN_BUILDER then (.outLOAN_BUILDER | .AmTable | .AmLine[] | select(.Idx == \"1\") |.Pmt | tonumber) else null end )) // null),\n            irregularPaymentAmount: null,\n            appraisedValue: null,\n            fasbFee: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then (.fees[] | (select(.fee_setup.fee.fee_code == \"express_loan_packaging_fee\") | .approved_fee_amount)) else (.fees[] | (select(.fee_setup.fee.fee_code == \"documentation_prep_fee\") | .approved_fee_amount)) end ) // null),\n            fasbCost: $fasbCost,\n            fasbYieldCode: null,\n            crossfootAmount: null,\n            committedLiability: ((if .product.product_type.product_type_code == \"LOC\" then .approved_amount else null end) // null),\n            troubleCode: null,\n            rateReviewDaysOffset: ((if .closing_date then (.closing_date | (if (((split(\"-\")[0] | tonumber)%4) == 0) then (if split(\"-\")[1] == \"02\" then (if ($totaldays[\"13\"] - (split(\"-\")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[\"13\"] - (split(\"-\")[2]|tonumber))|tostring]) else \"0\"end) else (if ($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber))|tostring]) else \"0\"end) end) else (if ($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber)) < 3 then ($dateDueOffset[($totaldays[split(\"-\")[1]] - (split(\"-\")[2]|tonumber))|tostring]) else \"0\"end) end)) else null end) // null),\n            billingStatementCode: null,\n            billingStatementDate: null,\n            drawRateSourceCode: null,\n            drawPostingOrder: null,\n            tierControlCode: null,\n            bsaRiskCode: null,\n            msaCode: null,\n            callRPTStmtOfCond: $callRPTStmtOfCond,\n            craCountyCode: null,\n            craStateCode: null,\n            craAnnualSalesAmt: null,\n            regulatoryStateCode: $regulatoryStateCode,\n            emailNoticeCode: null,\n            letterofCreditCode: null,\n            letterOfCreditType: null,\n            autoTransferSetup: $autoTransferSetup,\n            autoTransferAmount: null,\n            usdaRuralHousingInd: null,\n            dateOfLastAppraisal: null,\n            rebateControlDays: null,\n            debtToIncomeRatio: null,\n            debtToServiceCoverage: null,\n            pmiCoveragePercentage: null,\n            achOrigination: null,\n            templateID: null,\n            hoepaCode: null,\n            rwaCategory: null,\n            rwaPercent: null,\n            rwaSecured: null,\n            ibTransferAmount: null,\n            ibPrincipal: null,\n            ibEscrow: null,\n            ibInterest: null,\n            ibLateCharge: null,\n            userDefined6: null,\n            userDefined7: null,\n            userDefined8: null,\n            userDefined9: \"N/A - NOT ADC\",\n            userDefined10: null,\n            fmacsbaGuaranteePercent: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then ((if .sba_express_details and .sba_express_details != {} then .sba_express_details.sba_guaranty_percent | tonumber else null end) // null) else null end) // null),\n            fmacsbaServiceFeePercent: ((if ((.product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\") and .approved_amount) then (if .approved_amount < 500000 then 0 else null end) else null end) // null),\n            fmacmpFeePercent: null,\n            fmacSeriesNumber: null,\n            fmacid: null,\n            taxService: null,\n            fasbTermOverride: null,\n            fasbBeginDate: null,\n            blockAdvanceOnDelinquentOverride: $blockAdvanceOnDelinquentOverride,\n            irregularPayPercentage: null,\n            allowOverlinePercent: null,\n            autoTransferSplit1Day: null,\n            autoTransferSplit2Day: null,\n            creditBureauGovernmentTypeCode: null,\n            dateOfLastDebtServiceCoverage: null,\n            doNotDeleteCode: ((if .product.product_type.product_type_code == \"LOC\" then \"1\" else null end) // null),\n            endOfDrawDate: null,\n            eoyReportCode: null,\n            fhlbExceptionCode: null,\n            floodZone: null,\n            floodZoneMap: null,\n            floodZoneMapDate: null,\n            pmiPrepaidAmount: null,\n            rvcInsuranceCode: null,\n            smPurchaserProgramCode: null,\n            type2BillingControl: null,\n            type2MinimumPrincipalToBill: null,\n            companionNoteIndicator: null,\n            companionBorrowerNumber: null,\n            companionNoteNumber: null,\n            baseRateFactor: null,\n            numDaysBeforeNewRateEff: null,\n            paymentRecalcCode: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then $paymentRecalcCode else null end) // null),\n            roundingFactor: $roundingFactor,\n            minimumChangeFactor: null,\n            smPurchaseCode: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then $smPurchaseCode else null end) // null),\n            smPurchaseProgram: null,\n            smPoolNumber: ((.sba_number) // null),\n            smLoanIDNumber: null,\n            fundingDate: null,\n            expirationDate1: null,\n            expirationDateCode1: null,\n            expirationDate2: null,\n            expirationDateCode2: null,\n            expirationDate3: null,\n            expirationDateCode3: null,\n            expirationDate4: null,\n            expirationDateCode4: null,\n            expirationDate5: null,\n            expirationDateCode5: null,\n            expirationDate6: null,\n            expirationDateCode6: null,\n            expirationDate7: ((now | strftime(\"%Y-%m-%d\"))// null),\n            expirationDateCode7: $expirationDateCode7,\n            expirationDate8: null,\n            expirationDateCode8: null,\n            rvcPlanCode: null,\n            rvcNextBillingDate: null,\n            sicCode: ((if (.details and .details.boarding_details and .details.boarding_details.sicCode) then .details.boarding_details.sicCode else null end) // null),\n            ddaCombinedStmtAcctNo: null,\n            ddaCombinedStmtID: null,\n            couponPullFlag: null,\n            dateFirstCoupon: null,\n            undisbursedCreditLineCode: ((if .product.product_type.product_type_code == \"LOC\" then \"R\" else null end) // null),\n            censusTractCode: null,\n            timesRenewed: null,\n            additiveRateCode: ((if .product.product_code != \"EL_TL\" and .product.product_code != \"EL_LOC\" then $additiveRateCode else null end) // null),\n            internetProductCode: null,\n            userDefinedField1: null,\n            userDefinedField2: null,\n            userDefinedField3: null,\n            userDefinedField4: null,\n            userDefinedField5: (( [.collaterals[] ] as $collateralList | ((if $collateralList | length > 0 then ($collateralList[] | (select(.collateral_type_verbose == \"Motor Vehicle\") | .rolling_stock_details | .model + \" \" + (.year % 100 | tostring) + \" \" + .make + \" \" + .vin) // null) else null end))) // null),\n            letterofCreditRolloverDays: null,\n            balloonLoanIndicator: null,\n            balloonLoanTerm: null,\n            balloonLoanDueDate: null,\n            rateFloor: ((.product.min_rate) // null),\n            rateCeiling: ((.product.max_rate) // null),\n            originalBaseRate: null,\n            originalInterestRate: null,\n            periodicRateIncreaseLimit: null,\n            periodicRateDecreaseLimit: null,\n            smPassThroughRate: null,\n            maturityPastDueRate: ((if .product.product_code != \"EL_TL\" and .product.product_code != \"EL_LOC\" then $maturityPastDueRate else null end) // null),\n            originalPurchasePrice: null,\n            riskWeighting: null,\n            enterpriseZoneFactor: null,\n            higherPricedLoan: null,\n            propertyDescription2: null,\n            propertyDescription3: null,\n            propertyDescription4: null,\n            creditBureauDoNotReport: $creditBureauDoNotReport,\n            tfrDaysBeforeDueDate: null,\n            tfrDaysAfterDueDate: null,\n            numOfCoupons: null,\n            accountDescription: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then $accountDescription else (.product.name) end) // null),\n            originalRequestedAmount: null,\n            repaymentAmount: null,\n            hmdaCode: null,\n            sbaTypeCode: null,\n            smParticipationPercentage: null,\n            auxiliaryEscrowPayment: null,\n            mers: null,\n            pmiProjTerminationDate: null,\n            capitalizePaymentCode: null,\n            creditBureauAssociationCode: $creditBureauAssociationCode,\n            milarCompanyCode: null,\n            milarPrimaryCertificateNumber: null,\n            milarContractID: null,\n            milarPoolCertificateNumber: null,\n            pmiCancelCode: null,\n            useCollateralValueMarginRates: null,\n            legalEntityCustomerStatus: null,\n            originalBaseRateSign: null,\n            sbaRecoupFeeFlag: null,\n            ten98PropertyAddressIndicator: null,\n            ten98PropertyAddressDescriptionBox9Line1: null,\n            ten98PropertyAddressDescriptionBox9Line2: null,\n            ten98NumberOfProperties: null,\n            advanceFeeAmountFlag: null,\n            fhavaCaseNumber: null,\n            unconditionallyCancelableCommitment: null,\n            baseRateFactorControl: null,\n            accountTitle: null,\n            universalLoanIdentifier: null,\n            propertyAddress1: null,\n            propertyAddress2: null,\n            propertyAddress3: null,\n            ten98PointsPaidCode: null,\n            collateralInfo: \n                {\n                    description1: null,\n                    description2: null,\n                    description3: null,\n                    description4: null,\n                    description5: null,\n                    description6: null,\n                    description7: null,\n                    description8: null,\n                    description9: null,\n                    additionalDetails: null\n                }\n        },\n    customerRelationships: [if any(.loan_relations[]; select(.borrower_position == 2)) == false then (.loan_relations[] | \n        if(.is_primary_borrower == true) then \n            {\n                relationship: (($relationship[\"single\"]) // null),\n                customerGuid: ((.external_customer_id) // null)\n            }\n            elif (.relation_type == \"guarantor\") then \n            {\n                relationship: (($relationship[.relation_type\n                ]) // null),\n                customerGuid: ((.external_customer_id) // null)\n            }\n            else empty end)\n        elif (any(.loan_relations[]; select(.borrower_position == 2)) == true) then (.loan_relations[] | if(.relation_type == \"borrower\") then \n            {\n                relationship: ((if .is_primary_borrower == true then $relationship[\"primary\"] else $relationship[.relation_type] end) // null),\n                customerGuid: ((.external_customer_id) // null)\n            }\n        elif (.relation_type == \"guarantor\") then \n            {\n                relationship: (($relationship[.relation_type]) // null),\n                customerGuid: ((.external_customer_id) // null)\n            }\n        else empty end)\n        else .loan_relations[] | (if (.relation_type == \"guarantor\") then \n            {\n                relationship: (($relationship[.relation_type\n                ]) // null),\n                customerGuid: ((.external_customer_id) // null)\n            }\n        else empty end)\n        end\n    ],\n    comaker: [.loan_relations[] | (if .relation_type == \"guarantor\" then \n        {\n            address1: ((.relation_addresses[] | select(.address_type == \"permanent\") | (.address_line_1 + \" \" +.address_line_2 ) | ascii_upcase) // null),\n            borrowerNumber: ((if .loan_number then (.loan_number | tostring) else null end) // null),\n            customerGuid: ((.external_customer_id) // null),\n            consumerRelationshipCode: $consumerRelationshipCode,\n            noteNumber: $noteNumber,\n            tinid: $tinCode[.tin_type],\n            tinNumber: ((.tin) // null),\n            address2: ((.relation_addresses[] | select(.address_type == \"permanent\") | ((.city + \" \" + .state) | ascii_upcase)) // null),\n            address3: null,\n            affiliationCode: null,\n            alternatePhone: null,\n            bankruptcyChapter: null,\n            bankruptcyFilingDate: null,\n            bankruptcyFilingType: null,\n            bankruptcyStatus: null,\n            businessName: ((if .business_name != null then (.business_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end) // null),\n            businessPhone: ((.work_phone|tostring) // null),\n            cbAddressIndicator: null,\n            cbReportingStatus: null,\n            city: ((.relation_addresses[] | select(.address_type == \"permanent\") | (if .city then (.city | ascii_upcase) else null end ) // null) // null),\n            consumerInfoIndicator: null,\n            cosignerNumber: null,\n            country: null,\n            creditScore1: null,\n            creditScore2: null,\n            designation: null,\n            doNotReportCode: null,\n            emailAddress: ((if .email != null then .email | ascii_upcase else null end) // null),\n            eMailNoticeFlag: null,\n            firstName: ((if .first_name != null then (.first_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end) // null),\n            homePhone: ((if .home_phone != null then .home_phone | tostring else null end) // null),\n            inactiveCode: null,\n            lastName: ((if .last_name != null then (.last_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end) // null),\n            liabilityAmount: null,\n            liabilityPercentage: $liabilityPercentage,\n            mailCode: $mailCode,\n            middleName: ((if .middle_name != null then (.middle_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end) // null),\n            prefix: null,\n            printPrefix: null,\n            printSuffix: ((.suffix) // null),\n            province: null,\n            state: ((.relation_addresses[] | select(.address_type == \"permanent\") | (if .state != null then (.state | ascii_upcase) else null end)// null) // null),\n            suffix: ((.suffix) // null),\n            zipCode: ((.relation_addresses[] | select(.address_type == \"permanent\") | .zip_code) // null)\n        }\n        else empty end)\n    ]\n}",
    "response_body_spec": "{\n apiSuccess: (if has(\"apiSuccess\") then .apiSuccess else true end),\n errors: ((if .apiSuccess == false and .errors then (.errors | {\"errorMsg\": (if (.errorMsg | has(\"InnerException\")) then .errorMsg.InnerException.InnerException.Message else .errorMsg.title end), \"errorNum\": (if .errorNum then .errorNum elif .statusCode then .statusCode else null end)}) else null end) // null),\n responses: (if .apiSuccess and .responses then {AccountNumber: .responses.borrowerData.accountNumber | tostring} else null end) \n}",
    "request_body_spec_config": "{\n \"accrualMethodThisNote\":\"C\",\n \"accountDescription\":\"SBA EXPRESS - 50%\",\n \"officer2\":\"SBL\",\n \"officer3\":\"LC*\",\n \"class\":\"3\",\n \"fasbCost\":6500,\n \"callRPTStmtOfCond\":\"1763\",\n \"blockAdvanceOnDelinquentOverride\":\"1\",\n \"creditBureauDoNotReport\":\"1\",\n \"creditBureauAssociationCode\":\"0\",\n \"liabilityPercentage\":100,\n \"mailCode\":0,\n \"marginSign\":\"+\",\n \"regulatoryStateCode\":\"IN\",\n \"autoTransferSetup\":\"A\",\n \"roundingFactor\":\"08\",\n \"expirationDateCode7\":\"2\",\n \"reportCodeFlag\":\"1\",\n \"consumerRelationshipCode\":\"G\",\n \"liabilityPercentage\":100.00,\n \"mailCode\":\"0\",\n \"iglCode\":\"32\",\n \"paymentFrequency\":\"01\",\n \"paymentRecalcCode\":\"1\",\n \"smPurchaseCode\":\"S\",\n \"additiveRateCode\":\"5\",\n \"maturityPastDueRate\":5.00,\n \"noteNumber\":\"50000\",\n \"rateReviewInterval\":\"M001\", \n \"reportingStatusCode\": \"W\", \n \"lateChargeCode\":\"90\",\n \"rateControlCode\":\"G\",\n \"relationship\":{\n \"borrower\":\"S\",\n \"guarantor\":\"G\",\n \"primary\":\"P\",\n \"single\":\"*\"\n },\n \"tinCode\": {\n \"SSN\" : \"S\",\n \"EIN\" : \"E\"\n },\n \"collateralCode\":{\"vehicles\": \"7\", \"furniture_fixtures_equipment\": \"DD\", \"machinery_and_equipment\": \"DD\", \"land\": \"AA\", \"residential_real_estate\": \"J\", \"commercial_real_estate\": \"H\", \"life_insurance\": \"4\", \"cash_and_equivalents\": \"3\", \"assignment_of_leases\": \"L\", \"other\": \"Z\", \"inventory_accounts_receivable\": \"Z\", \"collateral1Code\": \"5\", \"collateral2Code\": \"U\", \"collateral3Code\": \"E\", \"collateral4Code\": \"X\"},\n \"totaldays\":{\n \"01\":31,\n \"02\":28,\n \"03\":31,\n \"04\":30,\n \"05\":31,\n \"06\":30,\n \"07\":31,\n \"08\":31,\n \"09\":30,\n \"10\":31,\n \"11\":30,\n \"12\":31,\n \"13\":29\n },\n \"dateDueOffset\":{\n \"0\":\"3\",\n \"1\":\"2\",\n \"2\":\"1\"\n },\n \"officerBorrower\":{\n \"Daniel Salmon\":\"202\",\n \"Kelly Mace Miller\":\"204\",\n \"Brian D Miller\":\"205\",\n \"Joe Powers\":\"206\",\n \"Daniel J Salmon\":\"210\",\n \"Brian D Miller\":\"211\",\n \"Kelly K Miller\":\"213\",\n \"DO NOT USE-WORKOUT\":\"250\",\n \"Darrell L Jaggers\":\"300\",\n \"DO NOT USE-UNCOLLECTABLE\":\"800\",\n \"Aracely Ledezma\":\"A_L\",\n \"Amy Varga\":\"AKV\",\n \"Amy Kezy\":\"ALK\",\n \"Andrea Moore\":\"AM\",\n \"Andrew M Steffel\":\"AMS\",\n \"Art Russell\":\"AR\",\n \"Andrea Watson\":\"AW\",\n \"Brad A Duncan\":\"BAD\",\n \"Benjamin C Jefferis\":\"BCJ\",\n \"Brian Ternet\":\"BCT\",\n \"Brian Miller\":\"BDM\",\n \"Bryan G Olund\":\"BGO\",\n \"Barb Jerzyk\":\"BJ\",\n \"Deposit Operations\":\"BKG\",\n \"Branch Loan\":\"BL\",\n \"Brittany Breen\":\"BNB\",\n \"Chris Campbell\":\"CDC\",\n \"Chris Cossell\":\"CEC\",\n \"Clay G Koehler\":\"CGK\",\n \"Christine Milton\":\"CIM\",\n \"Christine Tanjic\":\"CIT\",\n \"Cara l Jones\":\"CLJ\",\n \"Cindy Orzechowicz\":\"CO\",\n \"Doug A Wood\":\"DAG\",\n \"Dan Beechy\":\"DB\",\n \"David Bowers\":\"DCB\",\n \"Dan C Hanson\":\"DCH\",\n \"Dan Peter\":\"DGP\",\n \"David Giedemann\":\"DJG\",\n \"Dan Salmon\":\"DJS\",\n \"David Schnepp\":\"DLS\",\n \"Derek M Phillips\":\"DMP\",\n \"Dana Snyder\":\"DNS\",\n \"Dave R Miller\":\"DRM\",\n \"David Taylor\":\"DT\",\n \"Ed Schiesser\":\"EAS\",\n \"Erik Dombrowski\":\"ED\",\n \"Greg Gottschalk\":\"GDG\",\n \"Greg Widelski\":\"GFW\",\n \"Greg Gordon\":\"GG\",\n \"Gina M Storm\":\"GMS\",\n \"Gabe W Cripe\":\"GWC\",\n \"Jeff A Marsee\":\"JAM\",\n \"Jonathan A. Walker\":\"JAW\",\n \"Juli Beilicek\":\"JB\",\n \"Jonathan Hildebrandt\":\"JBH\",\n \"J Blake Sanderson\":\"JBS\",\n \"John Misiora\":\"JCM\",\n \"Joshua D Stuckey\":\"JDS\",\n \"John D Wingfield\":\"JDW\",\n \"Jeff F Olds\":\"JFO\",\n \"John Rybicki\":\"JJR\",\n \"Jason L Taege\":\"JLT\",\n \"Jennifer Willis\":\"JLW\",\n \"Jean Hershberger\":\"JMH\",\n \"Julie N Birmingham\":\"JNB\",\n \"Jamie Orcutt\":\"JO\",\n \"Joe Powers\":\"JP\",\n \"Jesse Dame\":\"JVD\",\n \"Jami Weinrich\":\"JW\",\n \"Kaylin A Korbelik\":\"KAK\",\n \"Kelly Miller\":\"KKM\",\n \"Kathy Sears\":\"KLS\",\n \"Kevin Cahill\":\"KMC\",\n \"Katie M Westlund\":\"KMW\",\n \"Kevin S Broadstreet\":\"KSB\",\n \"Katie Westlund Ponton\":\"KWP\",\n \"Lydia Bowen\":\"L_B\",\n \"Leonardo A Amat\":\"LAA\",\n \"Lisa Pensinger\":\"LMP\",\n \"Lydia Post\":\"LP\",\n \"Lupita Pacheco Lopez\":\"LPL\",\n \"Mary Dowd\":\"MCD\",\n \"Michael Schrage\":\"MES\",\n \"Michael Hardtke\":\"MH1\",\n \"Mende Jofceski\":\"MJ\",\n \"Mary Jo Kennelly\":\"MJK\",\n \"Mary Panas\":\"MKP\",\n \"Mark Baird\":\"MLB\",\n \"Mark Stevenson\":\"MSS\",\n \"Meredith Thompson\":\"MT\",\n \"Matt Stoops\":\"MVS\",\n \"Nick Matthews\":\"NRM\",\n \"Olivia McGuire\":\"OAM\",\n \"Paul Thiel\":\"PBT\",\n \"Patrick Morrisey\":\"PCM\",\n \"Paycheck Protection Program\":\"PPP\",\n \"Patrick W Collins\":\"PWC\",\n \"QuickLine\":\"QL\",\n \"Ryan Hoffman\":\"RJH\",\n \"Rachael Schroder\":\"RS\",\n \"Rob Slusser\":\"RS2\",\n \"Shelly Carlson\":\"S_C\",\n \"Scott A Norman\":\"SAN\",\n \"Stephanie Schrage\":\"SAS\",\n \"Sharyn Chesna\":\"SC\",\n \"Steve Watts\":\"SCW\",\n \"Sue English\":\"SE\",\n \"Sharon Harrison\":\"SH\",\n \"Sabrina L Kiser\":\"SLK\",\n \"Sheila Sieradzki\":\"SRS\",\n \"Stephanie Snoeberger\":\"SSS\",\n \"Terri Mitchell\":\"TCM\",\n \"Tom Neuffer\":\"TDN\",\n \"Troy Kafka\":\"TEK\",\n \"Tim Turner\":\"TJT\",\n \"Tom Wilk\":\"TJW\",\n \"Tammy L Johnson\":\"TLJ\",\n \"Timothy L Nelson\":\"TLN\",\n \"Terri Mitchell\":\"TM\",\n \"Terry M Ploetz\":\"TMP\",\n \"Timothy M Rudge\":\"TMR\",\n \"Tim Spoelman\":\"TMS\",\n \"Tom Konrad\":\"TRK\",\n \"Tim Woloszyn\":\"TW1\",\n \"Tim Warner\":\"TWW\",\n \"Vicki Hoffman\":\"VH\",\n \"William M Winterhaler\":\"WMW\",\n \"Yolanda Estrada\":\"YE\",\n \"Jessica A Schneider\":\"ZJS\",\n \"Jerry Tomasic\":\"ZJT\",\n \"Zoran Koricanac\":\"ZK\",\n \"Abbey Seberger\":\"ABY\"\n }\n}",
    "response_body_spec_config": "{}"
}