{
    "validation_spec": "{}",
    "request_body_spec": "{\n    borrowerData: {\n        accountNumber: ((if .loan_number != null then (.loan_number | tonumber) else null end) // null),\n        address1: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == \"permanent\") | (.address_line_1 + \" \" +.address_line_2 ) | ascii_upcase) // null),\n        reportingStatusCode: $reportingStatusCode,\n        tinCode: ((.loan_relations[] | select(.is_primary_borrower == true) | $tinCode[.tin_type]) // null),\n        tinNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | .tin) // null),\n        address2: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == \"permanent\") | (if.zip_code_plus4 != null then (.city + \" \" + .state + \" \" + .zip_code + \"-\" + .zip_code_plus4) | ascii_upcase else (.city + \" \" + .state + \" \" + .zip_code) | ascii_upcase end)) // null),\n        address3: null,\n        country: ((.loan_relations[] | select(.is_primary_borrower == true) | .relation_addresses[] | select(.address_type == \"permanent\") | .country | ascii_upcase) // null),\n        name2TIN: ((.loan_relations[] | select(.borrower_position == 2) | .tin) // null),\n        name2TINCode: ((.loan_relations[] | select(.borrower_position == 2) | $tinCode[.tin_type]) // null),\n        phoneNumber: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .work_phone != null then .work_phone|tostring elif .cell_phone != null then .cell_phone|tostring else .home_phone|tostring end)) // null),\n        officerBorrower: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),\n        reportingStatusCode2: ((.loan_relations[] | select(.borrower_position == 2) | \"W\") // null),\n        businessPhone: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == \"entity\" then .work_phone|tostring else null end)) // null),\n        birthDate: ((.loan_relations[] | select(.is_primary_borrower == true) | .dob) // null),\n        birthDate2: ((.loan_relations[] | select(.borrower_position == 2) | .dob) // null),\n        branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),\n        name1First: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .first_name != null) then (.first_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else (.business_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") end)) // null),\n        name1Middle: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .middle_name != null) then (.middle_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n        name1Last: ((.loan_relations[] | select(.is_primary_borrower == true) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .last_name != null) then (.last_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n        name2First: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .first_name != null) then (.first_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else (.business_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") end)) // null),\n        name2Middle: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .middle_name != null) then (.middle_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n        name2Last: ((.loan_relations[] | select(.borrower_position == 2) | (if ((.party_type == \"individual\" or .tin_type == \"SSN\") and .last_name != null) then (.last_name | split(\"\")) | map(if test(\"[[:punct:]]\") then if . == \"&\" then \"&\" else \"\" end else . end | ascii_upcase) | join(\"\") else null end)) // null),\n        emailAddress: ((.loan_relations[] | select(.is_primary_borrower == true) | (if .party_type == \"entity\" then (if .children| length>0 then (.children[] | select(.relation_type == \"representative\") | (if .email != null then .email | ascii_upcase else null end)) else null end) else (if .email != null then .email | ascii_upcase else null end) end) ) // null)\n    },\n    noteData: {\n        accountNumber: ((if .loan_number != null then (.loan_number | tostring) else null end) // null),\n        noteNumber: $noteNumber,\n        reportCodeFlag: $reportCodeFlag,\n        iglCode: $iglCode,\n        noteDate: ((if (now | strftime(\"%Y-%m-%d\")) < (.closing_date) then (now | strftime(\"%Y-%m-%d\")) else .closing_date end) // null),\n        noteAmount: ((if .product.product_code == \"SB_LOC\" then 0 else .approved_amount end) // null),\n        interestRate: ((.loan_approval.approved_rate) // null),\n        accrualMethodThisNote: $accrualMethodThisNote,\n        noteType: ((if .product.product_type.product_type_code == \"TL\" then \"3\" elif .product.product_type.product_type_code == \"LOC\" then \"4\" else null end) // null),\n        paymentFrequency: $paymentFrequency,\n        dateFirstDue: ((.payment_start_date) // null),\n        maturityDate: ((.maturity_date) // null),\n        officer: ((if (.details and .details.boarding_details and .details.boarding_details.officerBorrower) then .details.boarding_details.officerBorrower else null end) // null),\n        branchCode: ((if (.details and .details.boarding_details and .details.boarding_details.branchCode) then .details.boarding_details.branchCode else null end) // null),\n        controlCat: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then \"M\" else \"C\" end) // null),\n        collateral1Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList .collateral_type_verbose == \"All Assets\")) then $collateralCode[\"collateral1Code\"] else ((if $collateralList | length > 0 then ($collateralList[0] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),\n        collateral2Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList .collateral_type_verbose == \"All Assets\")) then $collateralCode[\"collateral2Code\"] else ((if $collateralList | length > 1 then ($collateralList[1] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),\n        collateral3Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList .collateral_type_verbose == \"All Assets\")) then $collateralCode[\"collateral3Code\"] else ((if $collateralList | length > 2 then ($collateralList[2] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),\n        collateral4Code: (( [.collaterals[] ] as $collateralList | if(any($collateralList .collateral_type_verbose == \"All Assets\")) then $collateralCode[\"collateral4Code\"] else ((if $collateralList | length > 3 then ($collateralList[3] | $collateralCode[.collateral_type_verbose]) else null end)) end ) // null),\n        class: $class,\n        rateControlCode: $rateControlCode,\n        rateReviewInterval: $rateReviewInterval,\n        marginAboveBelowBase: ((.differential_rate) // null),\n        marginSign: $marginSign,\n        lateChargeCode: ((if .product.product_code == \"EL_TL\" or .product.product_code == \"EL_LOC\" then $lateChargeCode else null end) // null),\n        propertyDescription: null,\n        creditScore1: ((.loan_interfaces[] | select(.interface_type == \"fico\" and .is_latest == true) | .details.fico_data.FI_LiquidCredit.business_info.decisionData.scoringList.scoring[] | select(.type == \"SBSS70\") | .totalScore | tostring) // null),\n        creditScore2: null,\n        committedLiability: ((if .product.product_type.product_type_code == \"LOC\" then .approved_amount else null end) // null),\n        callRPTStmtOfCond: $callRPTStmtOfCond,\n        doNotDeleteCode: ((if .product.product_type.product_type_code == \"LOC\" then \"1\" else null end) // null),\n        roundingFactor: $roundingFactor,\n        undisbursedCreditLineCode: ((if .product.product_type.product_type_code == \"LOC\" then \"R\" else null end) // null),\n        rateFloor: ((.product.min_rate) // null),\n        rateCeiling: ((.product.max_rate) // null),\n        propertyDescription2: null,\n        propertyDescription3: null,\n        propertyDescription4: null,\n        creditBureauDoNotReport: $creditBureauDoNotReport\n    },\n    customerRelationships: [if any(.loan_relations[]; select(.borrower_position == 2)) == false \n        then (.loan_relations[] | if(.is_primary_borrower == true) \n            then {\n                relationship: (($relationship[\"single\"]) // null),\n                customerGuid: ((.external_customer_id) // null)\n            }\n            else empty end)\n        elif (any(.loan_relations[]; select(.borrower_position == 2)) == true) \n        then (.loan_relations[] | if(.is_primary_borrower == true) \n            then {\n                relationship: $relationship[\"primary\"],\n                customerGuid: ((.external_customer_id) // null)\n            }\n            else empty end)\n        else empty end\n    ]\n}",
    "response_body_spec": "{\n apiSuccess: (if has(\"apiSuccess\") then .apiSuccess else true end),\n errors: ((if .apiSuccess == false and .errors then (.errors | {\"errorMsg\": (if (.errorMsg | has(\"InnerException\")) then .errorMsg.InnerException.InnerException.Message else .errorMsg.title end), \"errorNum\": (if .errorNum then .errorNum elif .statusCode then .statusCode else null end)}) else null end) // null),\n responses: (if .apiSuccess and .responses then {AccountNumber: .responses.borrowerData.accountNumber | tostring} else null end) \n}",
    "request_body_spec_config": "{\n \"accrualMethodThisNote\":\"C\",\n \"class\":\"3\",\n \"callRPTStmtOfCond\":\"1763\",\n \"creditBureauDoNotReport\":\"1\",\n \"marginSign\":\"+\",\n \"roundingFactor\":\"08\",\n \"reportCodeFlag\":\"1\",\n \"iglCode\":\"32\",\n \"paymentFrequency\":\"01\",\n \"noteNumber\":\"50000\",\n \"rateReviewInterval\":\"M001\", \n \"reportingStatusCode\": \"W\", \n \"lateChargeCode\":\"90\",\n \"rateControlCode\":\"G\",\n \"relationship\":{\n \"borrower\":\"S\",\n \"guarantor\":\"G\",\n \"primary\":\"P\",\n \"single\":\"*\"\n },\n \"tinCode\": {\n \"SSN\" : \"S\",\n \"EIN\" : \"E\"\n },\n \"collateralCode\":{\n \"Boat - State Titled\" : \"D\",\n \"Motor Vehicle\" : \"7\",\n \"Trailer - State Titled\" : \"DD\",\n \"Outboard Motor of a Boat\" : \"DD\",\n \"Equipment\" : \"DD\",\n \"collateral1Code\" : \"5\",\n \"collateral2Code\": \"U\",\n \"collateral3Code\": \"E\",\n \"collateral4Code\": \"X\"\n },\n \"officerBorrower\":{\n \"Daniel Salmon\":\"202\",\n \"Kelly Mace Miller\":\"204\",\n \"Brian D Miller\":\"205\",\n \"Joe Powers\":\"206\",\n \"Daniel J Salmon\":\"210\",\n \"Brian D Miller\":\"211\",\n \"Kelly K Miller\":\"213\",\n \"DO NOT USE-WORKOUT\":\"250\",\n \"Darrell L Jaggers\":\"300\",\n \"DO NOT USE-UNCOLLECTABLE\":\"800\",\n \"Aracely Ledezma\":\"A_L\",\n \"Amy Varga\":\"AKV\",\n \"Amy Kezy\":\"ALK\",\n \"Andrea Moore\":\"AM\",\n \"Andrew M Steffel\":\"AMS\",\n \"Art Russell\":\"AR\",\n \"Andrea Watson\":\"AW\",\n \"Brad A Duncan\":\"BAD\",\n \"Benjamin C Jefferis\":\"BCJ\",\n \"Brian Ternet\":\"BCT\",\n \"Brian Miller\":\"BDM\",\n \"Bryan G Olund\":\"BGO\",\n \"Barb Jerzyk\":\"BJ\",\n \"Deposit Operations\":\"BKG\",\n \"Branch Loan\":\"BL\",\n \"Brittany Breen\":\"BNB\",\n \"Chris Campbell\":\"CDC\",\n \"Chris Cossell\":\"CEC\",\n \"Clay G Koehler\":\"CGK\",\n \"Christine Milton\":\"CIM\",\n \"Christine Tanjic\":\"CIT\",\n \"Cara l Jones\":\"CLJ\",\n \"Cindy Orzechowicz\":\"CO\",\n \"Doug A Wood\":\"DAG\",\n \"Dan Beechy\":\"DB\",\n \"David Bowers\":\"DCB\",\n \"Dan C Hanson\":\"DCH\",\n \"Dan Peter\":\"DGP\",\n \"David Giedemann\":\"DJG\",\n \"Dan Salmon\":\"DJS\",\n \"David Schnepp\":\"DLS\",\n \"Derek M Phillips\":\"DMP\",\n \"Dana Snyder\":\"DNS\",\n \"Dave R Miller\":\"DRM\",\n \"David Taylor\":\"DT\",\n \"Ed Schiesser\":\"EAS\",\n \"Erik Dombrowski\":\"ED\",\n \"Greg Gottschalk\":\"GDG\",\n \"Greg Widelski\":\"GFW\",\n \"Greg Gordon\":\"GG\",\n \"Gina M Storm\":\"GMS\",\n \"Gabe W Cripe\":\"GWC\",\n \"Jeff A Marsee\":\"JAM\",\n \"Jonathan A. Walker\":\"JAW\",\n \"Juli Beilicek\":\"JB\",\n \"Jonathan Hildebrandt\":\"JBH\",\n \"J Blake Sanderson\":\"JBS\",\n \"John Misiora\":\"JCM\",\n \"Joshua D Stuckey\":\"JDS\",\n \"John D Wingfield\":\"JDW\",\n \"Jeff F Olds\":\"JFO\",\n \"John Rybicki\":\"JJR\",\n \"Jason L Taege\":\"JLT\",\n \"Jennifer Willis\":\"JLW\",\n \"Jean Hershberger\":\"JMH\",\n \"Julie N Birmingham\":\"JNB\",\n \"Jamie Orcutt\":\"JO\",\n \"Joe Powers\":\"JP\",\n \"Jesse Dame\":\"JVD\",\n \"Jami Weinrich\":\"JW\",\n \"Kaylin A Korbelik\":\"KAK\",\n \"Kelly Miller\":\"KKM\",\n \"Kathy Sears\":\"KLS\",\n \"Kevin Cahill\":\"KMC\",\n \"Katie M Westlund\":\"KMW\",\n \"Kevin S Broadstreet\":\"KSB\",\n \"Katie Westlund Ponton\":\"KWP\",\n \"Lydia Bowen\":\"L_B\",\n \"Leonardo A Amat\":\"LAA\",\n \"Lisa Pensinger\":\"LMP\",\n \"Lydia Post\":\"LP\",\n \"Lupita Pacheco Lopez\":\"LPL\",\n \"Mary Dowd\":\"MCD\",\n \"Michael Schrage\":\"MES\",\n \"Michael Hardtke\":\"MH1\",\n \"Mende Jofceski\":\"MJ\",\n \"Mary Jo Kennelly\":\"MJK\",\n \"Mary Panas\":\"MKP\",\n \"Mark Baird\":\"MLB\",\n \"Mark Stevenson\":\"MSS\",\n \"Meredith Thompson\":\"MT\",\n \"Matt Stoops\":\"MVS\",\n \"Nick Matthews\":\"NRM\",\n \"Olivia McGuire\":\"OAM\",\n \"Paul Thiel\":\"PBT\",\n \"Patrick Morrisey\":\"PCM\",\n \"Paycheck Protection Program\":\"PPP\",\n \"Patrick W Collins\":\"PWC\",\n \"QuickLine\":\"QL\",\n \"Ryan Hoffman\":\"RJH\",\n \"Rachael Schroder\":\"RS\",\n \"Rob Slusser\":\"RS2\",\n \"Shelly Carlson\":\"S_C\",\n \"Scott A Norman\":\"SAN\",\n \"Stephanie Schrage\":\"SAS\",\n \"Sharyn Chesna\":\"SC\",\n \"Steve Watts\":\"SCW\",\n \"Sue English\":\"SE\",\n \"Sharon Harrison\":\"SH\",\n \"Sabrina L Kiser\":\"SLK\",\n \"Sheila Sieradzki\":\"SRS\",\n \"Stephanie Snoeberger\":\"SSS\",\n \"Terri Mitchell\":\"TCM\",\n \"Tom Neuffer\":\"TDN\",\n \"Troy Kafka\":\"TEK\",\n \"Tim Turner\":\"TJT\",\n \"Tom Wilk\":\"TJW\",\n \"Tammy L Johnson\":\"TLJ\",\n \"Timothy L Nelson\":\"TLN\",\n \"Terri Mitchell\":\"TM\",\n \"Terry M Ploetz\":\"TMP\",\n \"Timothy M Rudge\":\"TMR\",\n \"Tim Spoelman\":\"TMS\",\n \"Tom Konrad\":\"TRK\",\n \"Tim Woloszyn\":\"TW1\",\n \"Tim Warner\":\"TWW\",\n \"Vicki Hoffman\":\"VH\",\n \"William M Winterhaler\":\"WMW\",\n \"Yolanda Estrada\":\"YE\",\n \"Jessica A Schneider\":\"ZJS\",\n \"Jerry Tomasic\":\"ZJT\",\n \"Zoran Koricanac\":\"ZK\",\n \"Abbey Seberger\":\"ABY\"\n }\n}",
    "response_body_spec_config": "{}"
}