{
  "validation_spec": "{}",
  "request_body_spec": "{ \n    fundedDate: (.funding_date // null),\n    sbaLoanNumber: .sba_number,\n    sbaApplicationNumber: .sba_loan_app_number,\n    referenceNumber: (.application_number // null | tostring),\n    purposeType: (if $purposeType[.loan_purpose] then $purposeType[.loan_purpose] else \"Other\" end) ,\n    loanTermMonths: (.loan_approval.approved_term // null),\n    submittalDate: (if .submitted_date then .submitted_date | split(\"T\")[0] else \"\" end),\n    impactWomanOwnedBusiness: .cra_female_owned_business,\n    impactVeteranOwnedBusiness: (if .details.boarding_details.veteran_owned_business == \"yes\" or .details.boarding_details.veteran_owned_business == \"Yes\" then true else false end),\n    impactMinorityOwnedBusiness: .cra_minority_owned_business,\n    loanType: (\n        if .product.product_code == \"7A_TL\" \n            then (\n                if .loan_amount>500000 \n                then \"SBA 7(a)\" \n                else \"SMALL SBA 7(a)\" \n            end ) \n        else \n            if (.loan_approval.approved_rate_type == \"Fixed\")\n                then ($fixedLoanTypes[.product.product_code] // null)\n            elif (.loan_approval.approved_rate_type == \"Variable\")\n                then ($varialbleLoanTypes[.product.product_code] // null)\n            end\n        end // null\n    ),\n    loanStatus: \"Funded\",\n    loanAmount: (.approved_amount // null),\n    approvalDate: (.loan_decisioned_at // null),\n    closingDate: (.closing_date // null),\n    sbaProcessingMethodCode: (\n        if (.product.product_code | IN(\"EL_LOC\",\"EL_TL\",\"7A\")) \n        then \"7AG\" \n        else null \n        end\n    ),\n    impactLmi: (.details.etran_community_advantage.low_to_moderate_community),\n    sbssScore: (if .sbss_score then .sbss_score | tonumber else \"\" end),\n    sbssScoreDate: (try (.loan_interfaces[] | select(.interface_type == \"fico\" and .is_latest == true) | .details.fico_data.FI_LiquidCredit.timestamp | split(\" \")[0] | strptime(\"%Y%m%d\") | strftime(\"%Y-%m-%d\") ) //null) ,\n    riskRatingGrade: .risk_rating,\n    riskRatingDate: (if .uw_completion_date then .uw_completion_date | split(\"T\")[0] else \"\" end),\n    riskRatingReviewerContactId: .environment_values.lc_user_id ,\n    impactJobsCreatedByLoan: ((\n        .loan_relations[] \n        | select(.is_primary_borrower == true) as $primaryBorrower\n        | if ( ($primaryBorrower.questionaire_responses | length) != 0 )\n            then ( $primaryBorrower.questionaire_responses[0].responses.jobs_created | tonumber )\n        else null\n        end )\n    ),\n    impactJobsRetainedByLoan: (\n        ( .loan_relations[] \n        | select(.is_primary_borrower == true) as $primaryBorrower\n        | if ( ($primaryBorrower.questionaire_responses | length) != 0 )\n            then .questionaire_responses[0].responses.jobs_saved | tonumber \n        else null\n        end )\n    ),\n    achAccountName: (.loan_relations[] | select(.is_primary_borrower==true) | .full_name // null),\n    achAccountNumber: .bank_details.account_number, \n    achRoutingNumber: .bank_details.routing_number,\n    achAccountType: .bank_details.account_type,\n    impactEmpowermentZoneEnterpriseCommunity: (.details.etran_community_advantage.empowerment_zone),\n    impactHubZone: (.details.etran_community_advantage.hub_zone),\n    impactPromiseZone: (.details.etran_community_advantage.promise_zone),\n    impactRural: (.loan_relations[] | select(.is_primary_borrower == true) | .details.rural_zone),\n    impactOpportunityZone: (.details.etran_community_advantage.opportunity_zone),\n    impactLowIncomeWorkforce: (.details.etran_community_advantage.resides_in_low_income),\n    impactSbaVeteransAdvantage: (.details.etran_community_advantage.eligibility_for_SBA_veterans),\n    collateralAnalysisNarrative: \"Federal Flood Insurance if business location or collateral falls in a special flood hazard area, Worker's Compensation Insurance - upon hire of W-2 employees, Business Personal Property Insurance, full replacement costs, General Business Liability Insurance\",\n    keyManInsuranceNarrative: \"General Lending Guidelines do not require Key Man Life and Disability insurance for small business loans $350,000 or less.\",\n    first2Years: ( \n        (.submitted_date | capture(\"^(?<date>\\\\d{4}-\\\\d{2}-\\\\d{2})\").date) as $sub\n        | (.loan_relations[] | select(.is_primary_borrower).business_established_date) as $est\n        | ($sub | capture(\"(?<y>\\\\d{4})-(?<m>\\\\d{2})-(?<d>\\\\d{2})\")) as $p\n        | $est < (((($p.y|tonumber)-2)|tostring) + \"-\" + $p.m + \"-\" + $p.d)\n    ),\n    officeId: (\n        if (.details.boarding_details.branch_code )\n            then .details.boarding_details.branch_code | tonumber \n        else null \n        end\n    ),\n    interestRatePercent: .loan_approval.approved_rate,\n    sop: \"50 10 7.1\",\n    billingContactMethod: \"Email\",\n    billingEmail: (.loan_relations[] | select(.is_primary_borrower == true) | .email),\n    billingName: (.loan_relations[] | select(.is_primary_borrower == true) | .business_name),\n    primaryContactId: (if .primary_contact_id then .primary_contact_id | tonumber else null end),\n    referrals: [ \n        { \n            contactId:  .environment_values.lc_user_id,\n            referralTypeId: 36,\n            fee1Description: (.fees[] | select(.fee_setup.fee.fee_code == \"express_loan_packaging_fee\") | .fee_setup.fee.fee_name // null),\n            fee1Amount: (.fees[] | select(.fee_setup.fee.fee_code == \"express_loan_packaging_fee\") | .approved_fee_amount // null),\n            fee1PaidBy: \"Applicant\",\n            fee3Description: (.fees[] | select(.fee_setup.fee.fee_code == \"broker_or_referral_fee\") | .fee_setup.fee.fee_name // null),\n            fee3Amount: (.fees[] | select(.fee_setup.fee.fee_code == \"broker_or_referral_fee\") | .approved_fee_amount // null),\n            fee3PaidBy: \"Lender\" \n        } \n    ] ,\n    expenses:[.funding_date as $fundingDate | .fees[] | select( .fee_setup.fee.fee_category == \"origination\") | \n        { \n            description:.fee_setup.fee.description,\n            amount:.approved_fee_amount,\n            date: ($fundingDate // null)\n        }\n    ] ,\n    useOfProceeds: ( .uop_id_mapping as $UOPIdMapping | [ .use_of_proceed_details[] | \n        { \n            useOfProceedTypeId: (if .purpose and $useOfProceedType[.purpose] and $UOPIdMapping[$useOfProceedType[.purpose]] then $UOPIdMapping[$useOfProceedType[.purpose]] else $UOPIdMapping[\"Other Cost\"] end),\n            Amount:(.amount|gsub(\",|\\\\s\";\"\")|tonumber) ,\n            Description: .name \n        } \n    ]),\n    collaterals: ( \n        .approved_amount as $loan_amount \n        | .collateral_types_mapping as $CollateralTypesMapping \n        | .environment_values.lien_holder_id as $lienHolderCompanyId \n        | [ .collaterals[] \n        | { \n            collateralTypeId: (if .collateral_type and $collateralType[.collateral_type_verbose] and $CollateralTypesMapping[$collateralType[.collateral_type_verbose]] then $CollateralTypesMapping[$collateralType[.collateral_type_verbose]] else ( if .category and $collateralType[.category] and $CollateralTypesMapping[$collateralType[.category]] then $CollateralTypesMapping[$collateralType[.category]] else $CollateralTypesMapping[\"Other\"] end) end),\n            value:(if .collateral_value then .collateral_value else $loan_amount end),\n            lienPosition:(if .lien_position == \"first\" then 1 elif .lien_position == \"second\" then 2 elif .lien_position == \"third\" then 3 elif .lien_position == \"fourth\" then 4 elif .lien_position == \"fifth\" then 5 elif .lien_position == \"subordinate\" then 2 else null end),\n            uccFiled:.is_ucc_filing_applicable,\n            liens:[ .lien_holders[] | \n                { \n                    lienHolderCompanyId: $lienHolderCompanyId ,\n                    lienPosition:(if .lien_position == \"first\" then 1 elif .lien_position == \"second\" then 2 elif .lien_position == \"third\" then 3 elif .lien_position == \"fourth\" then 4 elif .lien_position == \"fifth\" then 5 else null end),\n                    amount:.original_note_amount ,\n                    Comment:(if .business_name and .business_name != \"\" then .business_name else .first_name + \" \" + .last_name end)\n                } \n            ] \n        } \n    ] as $collaterals | $collaterals | map( . + {primary: (.value == ($collaterals | max_by(.value) | .value))} )),\n    mailingAddress: ( .loan_relations[] \n        | select(.is_primary_borrower == true) \n        | (.details.mailing_address_flag // false) as $mailingAddressFlag \n        | .relation_addresses[] \n        | select(.address_type == \"mailing\" or ($mailingAddressFlag and .address_type==\"permanent\"))\n        | { \n            city: .city,\n            street1: .address_line_1,\n            street2: .address_line_2,\n            postalCode: .zip_code,\n            countryCode: .country,\n            stateCode: .state \n        } \n    ),\n    projectAddress: ( .loan_relations[] \n        | select(.is_primary_borrower == true) \n        | (.details.project_address_flag // false) as $projectAddressFlag \n        | .relation_addresses[] \n        | select(.address_type == \"project\" or ($projectAddressFlag and .address_type==\"permanent\"))\n        | { \n            city: .city,\n            street1: .address_line_1,\n            street2: .address_line_2,\n            postalCode: .zip_code,\n            countryCode: .country,\n            stateCode: .state \n        } \n    ),\n    partners: [ \n        {\n            contactId:  .environment_values.lc_user_id,\n            roleType: \"LoanOfficer\"\n        },\n        {\n            contactId:  .environment_values.lc_user_id,\n            roleType: \"LoanProcessor\"\n        },\n        {\n            contactId:  .environment_values.lc_user_id,\n            roleType: \"ClosingOfficer\"\n        },\n        {\n            contactId:  .environment_values.lc_user_id,\n            roleType: \"CreditAnalyst\"\n        },\n        {\n            contactId:  .environment_values.lc_user_id,\n            roleType: \"ClosingAnalyst\"\n        } \n    ],\n    entities : ( [ .flat_relations[] | select(\n        (\n            .party_type == \"entity\" \n            and (.relation_type == \"borrower\" or .relation_type == \"co_borrower\" or .relation_type == \"owner\") \n            and (.is_collateral_related | not)\n        ) \n        or (.party_type == \"individual\" \n        and .entity_type == \"sole_proprietor\" \n        and (.is_collateral_related | not) \n        and .relation_type == \"borrower\")\n        ) | \n        ( if (.entity_type == \"sole_proprietor\") then { \n            primary: .is_primary_borrower,\n            association: \"Operating Company\",\n            guaranteeType: \"Unsecured Limited\",\n            company: \n                {\n                    name: ( if .dba_name and .dba_name !=\"\" then .dba_name else .first_name + (if .middle_name and .middle_name != \"\" then \" \" + .middle_name else \"\" end) + \" \" + .last_name end ),\n                    taxId: .tin,\n                    taxIdType: .tin_type,\n                    entityType: \"Sole Proprietorship\",\n                    naicsCode: ( if .naics_code then .naics_code | tostring else null end ),\n                    businessPhone: ((.work_phone|tostring) // null),\n                    currentOwnershipEstablishedDate: .business_established_date\n                } \n        } \n        else { \n            companyId: (if .external_customer_id then .external_customer_id | tonumber else \"\" end),\n            borrower:true ,\n            association:(if .is_primary_borrower then \"Operating Company\" else \"Affiliate\" end) ,\n            annualRevenue:( .details.annual_business_revenue ),\n            guaranteeType:(if .is_primary_borrower == false and .ownership_percentage>20 then \"Unsecured Full\" else \"Unsecured Limited\" end),\n            employeeCount: (if .is_primary_borrower then .number_of_employees else 0 end),\n            primary: .is_primary_borrower,\n            forms: [ (if .questionaire_responses[0] then \n                { \n                    name: \"SBA1919_2023\",\n                    form: \n                        { \n                            question1: (if .questionaire_responses[0].responses.epc == \"Yes\" then true else false end),\n                            question2: (if .questionaire_responses[0].responses.defaulted == \"Yes\" then true else false end),\n                            question3: (if .questionaire_responses[0].responses.other_business == \"Yes\" then true else false end),\n                            question4: (if .questionaire_responses[0].responses.probation == \"Yes\" then true else false end),\n                            question5: (if .questionaire_responses[0].responses.exporting == \"Yes\" then true else false end),\n                            question7: (if .questionaire_responses[0].responses.gambling == \"Yes\" then true else false end),\n                            question8: (if .questionaire_responses[0].responses.sba_employee == \"Yes\" then true else false end),\n                            question9: (if .questionaire_responses[0].responses.sba_employee_2 == \"Yes\" then true else false end),\n                            question10: (if .questionaire_responses[0].responses.government == \"Yes\" then true else false end),\n                            question11: (if .questionaire_responses[0].responses.government_2 == \"Yes\" then true else false end),\n                            question12: (if .questionaire_responses[0].responses.sba_council == \"Yes\" then true else false end),\n                            question13: (if .questionaire_responses[0].responses.legal_action == \"Yes\" then true else false end) \n                        } \n                } else empty end) \n            ],\n            company: \n                { \n                    name: .business_name,\n                    stateOfFormation: .state_of_establishment,\n                    currentOwnershipEstablishedDate: .business_established_date \n                },\n            memberOf: [ \n                { \n                    entityName: (if .memberof then .memberof else empty end),\n                    ownershipPercentage: .ownership_percentage,\n                    signer: (.is_signer),\n                    controllingMember: (.is_ben_owner_by_control) \n                } \n            ] \n        } end ) \n    ] ),\n    contacts: [ .flat_relations[] as $loan_relations | select(\n        $loan_relations.party_type == \"individual\" \n        and ($loan_relations.relation_type ==\"borrower\" or $loan_relations.relation_type ==\"owner\") \n        and ($loan_relations.relation_type != \"collateral_owner\") \n        and ($loan_relations.is_collateral_related | not) \n        and ($loan_relations.is_system_created | not) ) | \n        { \n            contactID: (if $loan_relations.external_customer_id != \"\" and $loan_relations.external_customer_id != null then $loan_relations.external_customer_id | tonumber else \"\" end),\n            guaranteeType:(if $loan_relations.ownership_percentage>20 then \"Unsecured Full\" else \"Unsecured Limited\" end) ,\n            contact:\n                { \n                    firstName:$loan_relations.first_name,\n                    lastName:$loan_relations.last_name,\n                    creditScore:( try (.loan_aggregator[] | select(.aggregator_type == \"fico\" and .is_latest == true) | .details.fico.principals[] | select(.SSN == $loan_relations.tin) | .ficoScore | tonumber) //null),\n                    creditScoreDate:(try (.loan_aggregator[] | select(.aggregator_type == \"fico\" and .is_latest == true) | (if .modified then .modified | split(\"T\")[0] else \"\" end) ) // null) \n                },\n            memberOf: ( if ($loan_relations.entity_type == \"sole_proprietor\") then [ \n                {\n                    entityName: ( if $loan_relations.dba_name and $loan_relations.dba_name !=\"\" then $loan_relations.dba_name else $loan_relations.first_name + (if $loan_relations.middle_name and $loan_relations.middle_name != \"\" then \" \" + $loan_relations.middle_name else \"\" end) + \" \" + $loan_relations.last_name end),\n                    ownershipPercentage: 100,\n                    jobTitle: \"Proprietor\",\n                    signer: ($loan_relations.is_signer),\n                    controllingMember: ($loan_relations.is_ben_owner_by_control) \n                } \n            ] else [ \n                { \n                    entityName: (if $loan_relations.memberof then $loan_relations.memberof else (if $loan_relations.entity_type == \"sole_proprietor\" then .borrower_name else empty end) end),\n                    ownershipPercentage: $loan_relations.ownership_percentage,\n                    jobTitle: (\n                        if $loan_relations.position == \"Managing Member\" \n                            then \"Member/Manager\" \n                        else $loan_relations.position\n                        end // null\n                    ),\n                    signer: ($loan_relations.is_signer),\n                    controllingMember: ($loan_relations.is_ben_owner_by_control) \n                } \n            ] end) \n        } \n    ] \n}",
  "response_body_spec": "{\n apiSuccess:.apiSuccess,\n errors: (if .apiSuccess == false then { errorNum: .errors.errorNum, errorMsg: .errors.errorMsg } else null end),\n responses:(if .apiSuccess == true then { id: .responses.result.id, AccountNumber: .responses.result.detail.logNumber } else null end)\n }",
  "custom_data_mapping": ". as $top | [ \n    { \n        first_time_borrower: ( if .customData | select(\"first_time_borrower\") \n            then { \n                ventures_object:(.customData[] | select(.first_time_borrower) | .first_time_borrower.ventures_object),\n                ventures_field:(.customData[] | select(.first_time_borrower) | .first_time_borrower.ventures_field), \n                value: .details.impact_data | (if .first_time_borrower== \"yes\" \n                    then \"true\" \n                    elif .first_time_borrower == \"no\"\n                        then \"false\"\n                    else empty\n                    end\n                ) \n            } \n        else empty \n        end ) \n    }, \n    { \n        first_time_business_owner:(if .customData | select(\"first_time_business_owner\") \n            then {\n                ventures_object:(.customData[] | select(.first_time_business_owner) | .first_time_business_owner.ventures_object),\n                ventures_field:(.customData[] | select(.first_time_business_owner) | .first_time_business_owner.ventures_field), \n                value: .details.impact_data | (if .first_time_business_owner == \"yes\" \n                    then \"true\" \n                    elif .first_time_business_owner == \"no\"\n                        then \"false\"\n                    else empty\n                    end\n                )\n            } \n        else empty \n        end)\n    }, \n    {\n        low_income_clients: (if .customData | select(\"low_income_clients\") \n            then {\n                ventures_object:(.customData[] | select(.low_income_clients) | .low_income_clients.ventures_object),\n                ventures_field: (.customData[] | select(.low_income_clients) | .low_income_clients.ventures_field), \n                value: .details.impact_data | (if .low_income_clients == \"yes\" \n                    then \"true\" \n                    elif .low_income_clients == \"no\"\n                        then \"false\"\n                    else empty\n                    end\n                )\n            } \n        else empty \n        end )\n    }, \n    {\n        percent_employees_paid_above_living_wage:(if .customData | select(\"percent_employees_paid_above_living_wage\") \n            then {\n                ventures_object:(.customData[] | select(.percent_employees_paid_above_living_wage) | .percent_employees_paid_above_living_wage.ventures_object),\n                ventures_field:(.customData[] | select(.percent_employees_paid_above_living_wage) | .percent_employees_paid_above_living_wage.ventures_field), \n                value: .details.impact_data | ( if .percent_employees_paid_above_living_wage == null \n                    then empty \n                else ( .percent_employees_paid_above_living_wage | split(\"-\") | map(tonumber) | add / length | tostring ) \n                end )\n            } \n        else empty \n        end )\n    }, \n    {\n        living_wage:(if .customData | select(\"living_wage\") then {\n            ventures_object:(.customData[] | select(.living_wage) | .living_wage.ventures_object),\n            ventures_field:(.customData[] | select(.living_wage) | .living_wage.ventures_field), \n            value:  .details.impact_data | ( if .living_wage == null \n                then empty \n                else .living_wage | tostring\n                end\n            )\n        } \n        else empty \n        end)\n    }, \n    {\n        free_reduced_prices:(if .customData | select(\"free_reduced_prices\") \n            then {\n                ventures_object:(.customData[] | select(.free_reduced_prices) | .free_reduced_prices.ventures_object),\n                ventures_field:(.customData[] | select(.free_reduced_prices) | .free_reduced_prices.ventures_field), \n                value: .details.impact_data | (if .free_reduced_prices == \"yes\" \n                    then \"true\" \n                elif .free_reduced_prices == \"no\"\n                    then \"false\"\n                else empty\n                end)\n            } \n        else empty \n        end )\n    }, \n    {\n        projected_percent_of_low_income_clients:(if .customData | select(\"projected_percent_of_low_income_clients\") \n            then {\n                ventures_object:(.customData[] | select(.projected_percent_of_low_income_clients) | .projected_percent_of_low_income_clients.ventures_object),\n                ventures_field:(.customData[] | select(.projected_percent_of_low_income_clients) | .projected_percent_of_low_income_clients.ventures_field), \n                value: .details.impact_data | (if .projected_percent_of_low_income_clients == null\n                    then empty\n                else .projected_percent_of_low_income_clients | split(\"-\") | map(tonumber) | add / length | tostring \n                end )\n            } \n        else empty \n        end )\n    }, \n    {\n        projected_clients_served:(if .customData | select(\"projected_clients_served\")  \n            then {\n                ventures_object:(.customData[] | select(.projected_clients_served) | .projected_clients_served.ventures_object),\n                ventures_field:(.customData[] | select(.projected_clients_served) | .projected_clients_served.ventures_field), \n                value: .details.impact_data | (if .projected_clients_served == null\n                    then empty\n                else .projected_clients_served | tostring \n                end )\n            } \n            else empty \n            end\n        )\n    }, \n    {\n        clients_currently_served:(if .customData | select(\"clients_currently_served\")\n            then {\n                ventures_object:(.customData[] | select(.clients_currently_served) | .clients_currently_served.ventures_object),\n                ventures_field:(.customData[] | select(.clients_currently_served) | .clients_currently_served.ventures_field), \n                value: .details.impact_data | (if .clients_currently_served == null\n                    then empty\n                else .clients_currently_served | tostring\n                end )\n            } \n            else empty \n            end\n        )\n    }, \n    {\n        loan_sale_reviewed:(if .customData | select(\"loan_sale_reviewed\") \n            then {\n                ventures_object:(.customData[] | select(.loan_sale_reviewed) | .loan_sale_reviewed.ventures_object),\n                ventures_field:(.customData[] | select(.loan_sale_reviewed) | .loan_sale_reviewed.ventures_field), \n                value: \"false\"\n            } \n            else empty \n            end\n        )\n    }, \n    {\n        lumos_credit_score:(if .customData | select(\"lumos_credit_score\") \n            then {\n                ventures_object:(.customData[] | select(.lumos_credit_score) | .lumos_credit_score.ventures_object),\n                ventures_field:(.customData[] | select(.lumos_credit_score) | .lumos_credit_score.ventures_field), \n                value: $top.loan_interfaces[] | select(.interface_type == \"lumos\") | .details.lumos_response.results.lumosPrediction.lumos.score | tostring \n            } \n            else empty \n            end\n        )\n    }, \n    {\n        lumos_credit_score_date:(if .customData | select(\"lumos_credit_score_date\") \n            then {\n                ventures_object:(.customData[] | select(.lumos_credit_score_date) | .lumos_credit_score_date.ventures_object),\n                ventures_field:(.customData[] | select(.lumos_credit_score_date) | .lumos_credit_score_date.ventures_field), \n                value: $top.loan_interfaces[] | select(.interface_type == \"lumos\") | .details.lumos_response.metadata.applicationRunDate | split(\"T\")[0] \n            } \n            else empty \n            end\n        )\n    }, \n    {\n        lumos_expected_loss:(if .customData | select(\"lumos_expected_loss\") \n            then {\n                ventures_object:(.customData[] | select(.lumos_expected_loss) | .lumos_expected_loss.ventures_object),\n                ventures_field:(.customData[] | select(.lumos_expected_loss) | .lumos_expected_loss.ventures_field), \n                value: $top.loan_interfaces[] | select(.interface_type == \"lumos\") | .details.lumos_response.results.lumosPrediction.lumos.expectedLoss | sub(\"%\"; \"\") \n            } \n            else empty \n            end\n        )\n    } \n]",
  "request_body_spec_config": "{\n    \"purposeType\": {\n        \"Purchase Commercial Real Estate\": \"Purchase Commercial Real Estate\",\n        \"Improvement to Leased Space\": \"Improvements to Leased Space\",\n        \"Purchase Equipment\": \"Purchase Equipment\",\n        \"Purchase Furniture and Fixtures\": \"Purchase Furniture and Fixtures\",\n        \"Purchase Inventory\": \"Purchase Inventory\",\n        \"Debt Refinance\": \"Debt Refinance\",\n        \"Business Acquisition\": \"Business Acquisition\",\n        \"Working Capital\": \"Working Capital\",\n        \"Purchase Vehicle(s)\": \"Purchase Vehicle(s)\",\n        \"Start Up Financing\": \"Start Up Financing\"\n    },\n    \"useOfProceedType\": {\n        \"Purchase Land only\": \"Purchase Of Land\",\n        \"Purchase Land and improvements\": \"Purchase Land & Building\",\n        \"Construct a Building\": \"Construct a Building\",\n        \"Purchase Equipment\": \"Equipment\",\n        \"SBA Guaranty Fee\": \"Soft Cost (Packaging and closing cost)\",\n        \"Purchase Furniture and Fixtures\": \"Fixtures\",\n        \"Other\": \"Other Cost\",\n        \"Add an Addition to an Existing Building\": \"Building Addition\",\n        \"Purchase Improvements only\": \"Purchase Improvement\",\n        \"Make Renovations to an Existing Building\": \"Building Renovation\",\n        \"Leasehold Improvements\": \"Building Leasehold Improvements\",\n        \"Pay Notes Payable - not Same Institution Debt\": \"Pay Notes Payable - NOT Same Institution Debt\",\n        \"Pay Notes Payable - Same Institution Debt\": \"Pay Notes Payable - Same Institution Debt\",\n        \"Pay Off Interim Construction Loan\": \"Pay Off Interim Construction Loan\",\n        \"Pay Off Lender's Interim Loan\": \"Pay Off Lender's Interim Loan\",\n        \"Purchase Inventory\": \"Purchase Inventory\",\n        \"Pay Trade or Accounts Payable\": \"Pay Trade or Accounts Payable\",\n        \"Purchase Business - Stock Purchase\": \"Purchase Business (Change of Ownership)\",\n        \"Purchase Business - Asset Purchase\": \"Purchase Business (Change of Ownership)\",\n        \"Refinance SBA Loan - not Same Institution Debt\": \"Refinance SBA Loan – NOT Same Institution Debt\",\n        \"Working Capital\": \"Working Capital\",\n        \"Refinance SBA Loan - Same Institution Debt\": \"Refinance SBA Loan – Same Institution Debt\"\n    },\n    \"collateralType\": {\n        \"all_business_assets\": \"Business Assets\",\n        \"Equipment\": \"Equipment\",\n        \"all_assets\": \"Business Assets\",\n        \"machinery_and_equipment\": \"Equipment\",\n        \"commercial_real_estate\": \"Commercial Real Estate\",\n        \"Motor Vehicle\": \"Automobile\",\n        \"vehicles\": \"Automobile\",\n        \"life_insurance\": \"Life Insurance\",\n        \"All Assets\": \"Business Assets\",\n        \"inventory_accounts_receivable\": \"Inventory\",\n        \"other\": \"Other\",\n        \"cash_and_equivalents\": \"Other\",\n        \"furniture_fixtures_equipment\": \"Furniture and Fixtures\",\n        \"assignment_of_leases\": \"Assignment of Leases & Rents\",\n        \"land\": \"Ground Lease (Land Only No Improvements)\"\n    },\n    \"varialbleLoanTypes\": {\n        \"SB_TL\": \"Conventional Term Loan_Variable\",\n        \"SB_LOC\": \"Conventional LOC_Variable\",\n        \"EL_TL\": \"SBA EXPRESS TERM\",\n        \"EL_LOC\": \"SBA EXPRESS LOC\"\n    },\n    \"fixedLoanTypes\": {\n        \"SB_TL\": \"Conventional Term Loan\",\n        \"SB_LOC\": \"Conventional LOC\",\n        \"EL_TL\": \"SBA EXPRESS TERM\",\n        \"EL_LOC\": \"SBA EXPRESS LOC\"\n    }\n}",
  "response_body_spec_config": "{}"
}